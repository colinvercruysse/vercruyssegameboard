{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Version, InjectionToken, NgModule, Optional, Inject, inject, LOCALE_ID, Injectable, Directive, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, EventEmitter, Output, ViewChild } from '@angular/core';\nimport * as i1 from '@angular/cdk/a11y';\nimport { isFakeMousedownFromScreenReader, isFakeTouchstartFromScreenReader } from '@angular/cdk/a11y';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { VERSION as VERSION$1 } from '@angular/cdk';\nimport * as i3 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i1$1 from '@angular/cdk/platform';\nimport { _isTestEnvironment, normalizePassiveListenerOptions, _getEventTarget } from '@angular/cdk/platform';\nimport { coerceBooleanProperty, coerceNumberProperty, coerceElement } from '@angular/cdk/coercion';\nimport { Observable, Subject } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ENTER, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Current version of Angular Material. */\n\nconst _c0 = [\"*\", [[\"mat-option\"], [\"ng-container\"]]];\nconst _c1 = [\"*\", \"mat-option, ng-container\"];\nconst _c2 = [\"text\"];\n\nfunction MatOption_mat_pseudo_checkbox_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-pseudo-checkbox\", 5);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"state\", ctx_r0.selected ? \"checked\" : \"unchecked\")(\"disabled\", ctx_r0.disabled);\n  }\n}\n\nfunction MatOption_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"(\", ctx_r2.group.label, \")\");\n  }\n}\n\nconst _c3 = [[[\"mat-icon\"]], \"*\"];\nconst _c4 = [\"mat-icon\", \"*\"];\nconst VERSION = new Version('15.1.0');\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** @docs-private */\n\nclass AnimationCurves {}\n\nAnimationCurves.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\nAnimationCurves.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\nAnimationCurves.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\nAnimationCurves.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n/** @docs-private */\n\nclass AnimationDurations {}\n\nAnimationDurations.COMPLEX = '375ms';\nAnimationDurations.ENTERING = '225ms';\nAnimationDurations.EXITING = '195ms';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** @docs-private */\n\nfunction MATERIAL_SANITY_CHECKS_FACTORY() {\n  return true;\n}\n/** Injection token that configures whether the Material sanity checks are enabled. */\n\n\nconst MATERIAL_SANITY_CHECKS = new InjectionToken('mat-sanity-checks', {\n  providedIn: 'root',\n  factory: MATERIAL_SANITY_CHECKS_FACTORY\n});\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\n\nclass MatCommonModule {\n  constructor(highContrastModeDetector, _sanityChecks, _document) {\n    this._sanityChecks = _sanityChecks;\n    this._document = _document;\n    /** Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype). */\n\n    this._hasDoneGlobalChecks = false; // While A11yModule also does this, we repeat it here to avoid importing A11yModule\n    // in MatCommonModule.\n\n    highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n\n    if (!this._hasDoneGlobalChecks) {\n      this._hasDoneGlobalChecks = true;\n\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (this._checkIsEnabled('doctype')) {\n          _checkDoctypeIsDefined(this._document);\n        }\n\n        if (this._checkIsEnabled('theme')) {\n          _checkThemeIsPresent(this._document);\n        }\n\n        if (this._checkIsEnabled('version')) {\n          _checkCdkVersionMatch();\n        }\n      }\n    }\n  }\n  /** Gets whether a specific sanity check is enabled. */\n\n\n  _checkIsEnabled(name) {\n    if (_isTestEnvironment()) {\n      return false;\n    }\n\n    if (typeof this._sanityChecks === 'boolean') {\n      return this._sanityChecks;\n    }\n\n    return !!this._sanityChecks[name];\n  }\n\n}\n\nMatCommonModule.ɵfac = function MatCommonModule_Factory(t) {\n  return new (t || MatCommonModule)(i0.ɵɵinject(i1.HighContrastModeDetector), i0.ɵɵinject(MATERIAL_SANITY_CHECKS, 8), i0.ɵɵinject(DOCUMENT));\n};\n\nMatCommonModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: MatCommonModule\n});\nMatCommonModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [BidiModule, BidiModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCommonModule, [{\n    type: NgModule,\n    args: [{\n      imports: [BidiModule],\n      exports: [BidiModule]\n    }]\n  }], function () {\n    return [{\n      type: i1.HighContrastModeDetector\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MATERIAL_SANITY_CHECKS]\n      }]\n    }, {\n      type: Document,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n/** Checks that the page has a doctype. */\n\n\nfunction _checkDoctypeIsDefined(doc) {\n  if (!doc.doctype) {\n    console.warn('Current document does not have a doctype. This may cause ' + 'some Angular Material components not to behave as expected.');\n  }\n}\n/** Checks that a theme has been included. */\n\n\nfunction _checkThemeIsPresent(doc) {\n  // We need to assert that the `body` is defined, because these checks run very early\n  // and the `body` won't be defined if the consumer put their scripts in the `head`.\n  if (!doc.body || typeof getComputedStyle !== 'function') {\n    return;\n  }\n\n  const testElement = doc.createElement('div');\n  testElement.classList.add('mat-theme-loaded-marker');\n  doc.body.appendChild(testElement);\n  const computedStyle = getComputedStyle(testElement); // In some situations the computed style of the test element can be null. For example in\n  // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n\n  if (computedStyle && computedStyle.display !== 'none') {\n    console.warn('Could not find Angular Material core theme. Most Material ' + 'components may not work as expected. For more info refer ' + 'to the theming guide: https://material.angular.io/guide/theming');\n  }\n\n  testElement.remove();\n}\n/** Checks whether the Material version matches the CDK version. */\n\n\nfunction _checkCdkVersionMatch() {\n  if (VERSION.full !== VERSION$1.full) {\n    console.warn('The Angular Material version (' + VERSION.full + ') does not match ' + 'the Angular CDK version (' + VERSION$1.full + ').\\n' + 'Please ensure the versions of these two packages exactly match.');\n  }\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nfunction mixinDisabled(base) {\n  return class extends base {\n    get disabled() {\n      return this._disabled;\n    }\n\n    set disabled(value) {\n      this._disabled = coerceBooleanProperty(value);\n    }\n\n    constructor(...args) {\n      super(...args);\n      this._disabled = false;\n    }\n\n  };\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nfunction mixinColor(base, defaultColor) {\n  return class extends base {\n    get color() {\n      return this._color;\n    }\n\n    set color(value) {\n      const colorPalette = value || this.defaultColor;\n\n      if (colorPalette !== this._color) {\n        if (this._color) {\n          this._elementRef.nativeElement.classList.remove(`mat-${this._color}`);\n        }\n\n        if (colorPalette) {\n          this._elementRef.nativeElement.classList.add(`mat-${colorPalette}`);\n        }\n\n        this._color = colorPalette;\n      }\n    }\n\n    constructor(...args) {\n      super(...args);\n      this.defaultColor = defaultColor; // Set the default color that can be specified from the mixin.\n\n      this.color = defaultColor;\n    }\n\n  };\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nfunction mixinDisableRipple(base) {\n  return class extends base {\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() {\n      return this._disableRipple;\n    }\n\n    set disableRipple(value) {\n      this._disableRipple = coerceBooleanProperty(value);\n    }\n\n    constructor(...args) {\n      super(...args);\n      this._disableRipple = false;\n    }\n\n  };\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nfunction mixinTabIndex(base, defaultTabIndex = 0) {\n  return class extends base {\n    get tabIndex() {\n      return this.disabled ? -1 : this._tabIndex;\n    }\n\n    set tabIndex(value) {\n      // If the specified tabIndex value is null or undefined, fall back to the default value.\n      this._tabIndex = value != null ? coerceNumberProperty(value) : this.defaultTabIndex;\n    }\n\n    constructor(...args) {\n      super(...args);\n      this._tabIndex = defaultTabIndex;\n      this.defaultTabIndex = defaultTabIndex;\n    }\n\n  };\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nfunction mixinErrorState(base) {\n  return class extends base {\n    /** Updates the error state based on the provided error state matcher. */\n    updateErrorState() {\n      const oldState = this.errorState;\n      const parent = this._parentFormGroup || this._parentForm;\n      const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n      const control = this.ngControl ? this.ngControl.control : null;\n      const newState = matcher.isErrorState(control, parent);\n\n      if (newState !== oldState) {\n        this.errorState = newState;\n        this.stateChanges.next();\n      }\n    }\n\n    constructor(...args) {\n      super(...args);\n      /** Whether the component is in an error state. */\n\n      this.errorState = false;\n    }\n\n  };\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Mixin to augment a directive with an initialized property that will emits when ngOnInit ends. */\n\n\nfunction mixinInitialized(base) {\n  return class extends base {\n    constructor(...args) {\n      super(...args);\n      /** Whether this directive has been marked as initialized. */\n\n      this._isInitialized = false;\n      /**\n       * List of subscribers that subscribed before the directive was initialized. Should be notified\n       * during _markInitialized. Set to null after pending subscribers are notified, and should\n       * not expect to be populated after.\n       */\n\n      this._pendingSubscribers = [];\n      /**\n       * Observable stream that emits when the directive initializes. If already initialized, the\n       * subscriber is stored to be notified once _markInitialized is called.\n       */\n\n      this.initialized = new Observable(subscriber => {\n        // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\n        // when _markInitialized is called.\n        if (this._isInitialized) {\n          this._notifySubscriber(subscriber);\n        } else {\n          this._pendingSubscribers.push(subscriber);\n        }\n      });\n    }\n    /**\n     * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n     * of ngOnInit.\n     * @docs-private\n     */\n\n\n    _markInitialized() {\n      if (this._isInitialized && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('This directive has already been marked as initialized and ' + 'should not be called twice.');\n      }\n\n      this._isInitialized = true;\n\n      this._pendingSubscribers.forEach(this._notifySubscriber);\n\n      this._pendingSubscribers = null;\n    }\n    /** Emits and completes the subscriber stream (should only emit once). */\n\n\n    _notifySubscriber(subscriber) {\n      subscriber.next();\n      subscriber.complete();\n    }\n\n  };\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** InjectionToken for datepicker that can be used to override default locale code. */\n\n\nconst MAT_DATE_LOCALE = new InjectionToken('MAT_DATE_LOCALE', {\n  providedIn: 'root',\n  factory: MAT_DATE_LOCALE_FACTORY\n});\n/** @docs-private */\n\nfunction MAT_DATE_LOCALE_FACTORY() {\n  return inject(LOCALE_ID);\n}\n/** Adapts type `D` to be usable as a date by cdk-based components that work with dates. */\n\n\nclass DateAdapter {\n  constructor() {\n    this._localeChanges = new Subject();\n    /** A stream that emits when the locale changes. */\n\n    this.localeChanges = this._localeChanges;\n  }\n  /**\n   * Given a potential date object, returns that same date object if it is\n   * a valid date, or `null` if it's not a valid date.\n   * @param obj The object to check.\n   * @returns A date or `null`.\n   */\n\n\n  getValidDateOrNull(obj) {\n    return this.isDateInstance(obj) && this.isValid(obj) ? obj : null;\n  }\n  /**\n   * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n   * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n   * string). The default implementation does not allow any deserialization, it simply checks that\n   * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n   * method on all of its `@Input()` properties that accept dates. It is therefore possible to\n   * support passing values from your backend directly to these properties by overriding this method\n   * to also deserialize the format used by your backend.\n   * @param value The value to be deserialized into a date object.\n   * @returns The deserialized date object, either a valid date, null if the value can be\n   *     deserialized into a null date (e.g. the empty string), or an invalid date.\n   */\n\n\n  deserialize(value) {\n    if (value == null || this.isDateInstance(value) && this.isValid(value)) {\n      return value;\n    }\n\n    return this.invalid();\n  }\n  /**\n   * Sets the locale used for all dates.\n   * @param locale The new locale.\n   */\n\n\n  setLocale(locale) {\n    this.locale = locale;\n\n    this._localeChanges.next();\n  }\n  /**\n   * Compares two dates.\n   * @param first The first date to compare.\n   * @param second The second date to compare.\n   * @returns 0 if the dates are equal, a number less than 0 if the first date is earlier,\n   *     a number greater than 0 if the first date is later.\n   */\n\n\n  compareDate(first, second) {\n    return this.getYear(first) - this.getYear(second) || this.getMonth(first) - this.getMonth(second) || this.getDate(first) - this.getDate(second);\n  }\n  /**\n   * Checks if two dates are equal.\n   * @param first The first date to check.\n   * @param second The second date to check.\n   * @returns Whether the two dates are equal.\n   *     Null dates are considered equal to other null dates.\n   */\n\n\n  sameDate(first, second) {\n    if (first && second) {\n      let firstValid = this.isValid(first);\n      let secondValid = this.isValid(second);\n\n      if (firstValid && secondValid) {\n        return !this.compareDate(first, second);\n      }\n\n      return firstValid == secondValid;\n    }\n\n    return first == second;\n  }\n  /**\n   * Clamp the given date between min and max dates.\n   * @param date The date to clamp.\n   * @param min The minimum value to allow. If null or omitted no min is enforced.\n   * @param max The maximum value to allow. If null or omitted no max is enforced.\n   * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\n   *     otherwise `date`.\n   */\n\n\n  clampDate(date, min, max) {\n    if (min && this.compareDate(date, min) < 0) {\n      return min;\n    }\n\n    if (max && this.compareDate(date, max) > 0) {\n      return max;\n    }\n\n    return date;\n  }\n\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nconst MAT_DATE_FORMATS = new InjectionToken('mat-date-formats');\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n */\n\nconst ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n/** Creates an array and fills it with values. */\n\nfunction range(length, valueFunction) {\n  const valuesArray = Array(length);\n\n  for (let i = 0; i < length; i++) {\n    valuesArray[i] = valueFunction(i);\n  }\n\n  return valuesArray;\n}\n/** Adapts the native JS Date for use with cdk-based components that work with dates. */\n\n\nclass NativeDateAdapter extends DateAdapter {\n  constructor(matDateLocale,\n  /**\n   * @deprecated No longer being used. To be removed.\n   * @breaking-change 14.0.0\n   */\n  _platform) {\n    super();\n    /**\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 14.0.0\n     */\n\n    this.useUtcForDisplay = false;\n    super.setLocale(matDateLocale);\n  }\n\n  getYear(date) {\n    return date.getFullYear();\n  }\n\n  getMonth(date) {\n    return date.getMonth();\n  }\n\n  getDate(date) {\n    return date.getDate();\n  }\n\n  getDayOfWeek(date) {\n    return date.getDay();\n  }\n\n  getMonthNames(style) {\n    const dtf = new Intl.DateTimeFormat(this.locale, {\n      month: style,\n      timeZone: 'utc'\n    });\n    return range(12, i => this._format(dtf, new Date(2017, i, 1)));\n  }\n\n  getDateNames() {\n    const dtf = new Intl.DateTimeFormat(this.locale, {\n      day: 'numeric',\n      timeZone: 'utc'\n    });\n    return range(31, i => this._format(dtf, new Date(2017, 0, i + 1)));\n  }\n\n  getDayOfWeekNames(style) {\n    const dtf = new Intl.DateTimeFormat(this.locale, {\n      weekday: style,\n      timeZone: 'utc'\n    });\n    return range(7, i => this._format(dtf, new Date(2017, 0, i + 1)));\n  }\n\n  getYearName(date) {\n    const dtf = new Intl.DateTimeFormat(this.locale, {\n      year: 'numeric',\n      timeZone: 'utc'\n    });\n    return this._format(dtf, date);\n  }\n\n  getFirstDayOfWeek() {\n    // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n    return 0;\n  }\n\n  getNumDaysInMonth(date) {\n    return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\n  }\n\n  clone(date) {\n    return new Date(date.getTime());\n  }\n\n  createDate(year, month, date) {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      // Check for invalid month and date (except upper bound on date which we have to check after\n      // creating the Date).\n      if (month < 0 || month > 11) {\n        throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n      }\n\n      if (date < 1) {\n        throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n      }\n    }\n\n    let result = this._createDateWithOverflow(year, month, date); // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n\n\n    if (result.getMonth() != month && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n    }\n\n    return result;\n  }\n\n  today() {\n    return new Date();\n  }\n\n  parse(value, parseFormat) {\n    // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n    // parameters.\n    if (typeof value == 'number') {\n      return new Date(value);\n    }\n\n    return value ? new Date(Date.parse(value)) : null;\n  }\n\n  format(date, displayFormat) {\n    if (!this.isValid(date)) {\n      throw Error('NativeDateAdapter: Cannot format invalid date.');\n    }\n\n    const dtf = new Intl.DateTimeFormat(this.locale, { ...displayFormat,\n      timeZone: 'utc'\n    });\n    return this._format(dtf, date);\n  }\n\n  addCalendarYears(date, years) {\n    return this.addCalendarMonths(date, years * 12);\n  }\n\n  addCalendarMonths(date, months) {\n    let newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date)); // It's possible to wind up in the wrong month if the original month has more days than the new\n    // month. In this case we want to go to the last day of the desired month.\n    // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n    // guarantee this.\n\n\n    if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\n      newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n    }\n\n    return newDate;\n  }\n\n  addCalendarDays(date, days) {\n    return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n  }\n\n  toIso8601(date) {\n    return [date.getUTCFullYear(), this._2digit(date.getUTCMonth() + 1), this._2digit(date.getUTCDate())].join('-');\n  }\n  /**\n   * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n   * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n   * invalid date for all other values.\n   */\n\n\n  deserialize(value) {\n    if (typeof value === 'string') {\n      if (!value) {\n        return null;\n      } // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n      // string is the right format first.\n\n\n      if (ISO_8601_REGEX.test(value)) {\n        let date = new Date(value);\n\n        if (this.isValid(date)) {\n          return date;\n        }\n      }\n    }\n\n    return super.deserialize(value);\n  }\n\n  isDateInstance(obj) {\n    return obj instanceof Date;\n  }\n\n  isValid(date) {\n    return !isNaN(date.getTime());\n  }\n\n  invalid() {\n    return new Date(NaN);\n  }\n  /** Creates a date but allows the month and date to overflow. */\n\n\n  _createDateWithOverflow(year, month, date) {\n    // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n    // To work around this we use `setFullYear` and `setHours` instead.\n    const d = new Date();\n    d.setFullYear(year, month, date);\n    d.setHours(0, 0, 0, 0);\n    return d;\n  }\n  /**\n   * Pads a number to make it two digits.\n   * @param n The number to pad.\n   * @returns The padded number.\n   */\n\n\n  _2digit(n) {\n    return ('00' + n).slice(-2);\n  }\n  /**\n   * When converting Date object to string, javascript built-in functions may return wrong\n   * results because it applies its internal DST rules. The DST rules around the world change\n   * very frequently, and the current valid rule is not always valid in previous years though.\n   * We work around this problem building a new Date object which has its internal UTC\n   * representation with the local date and time.\n   * @param dtf Intl.DateTimeFormat object, containing the desired string format. It must have\n   *    timeZone set to 'utc' to work fine.\n   * @param date Date from which we want to get the string representation according to dtf\n   * @returns A Date object with its UTC representation based on the passed in date info\n   */\n\n\n  _format(dtf, date) {\n    // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n    // To work around this we use `setUTCFullYear` and `setUTCHours` instead.\n    const d = new Date();\n    d.setUTCFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    d.setUTCHours(date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());\n    return dtf.format(d);\n  }\n\n}\n\nNativeDateAdapter.ɵfac = function NativeDateAdapter_Factory(t) {\n  return new (t || NativeDateAdapter)(i0.ɵɵinject(MAT_DATE_LOCALE, 8), i0.ɵɵinject(i1$1.Platform));\n};\n\nNativeDateAdapter.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NativeDateAdapter,\n  factory: NativeDateAdapter.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NativeDateAdapter, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_DATE_LOCALE]\n      }]\n    }, {\n      type: i1$1.Platform\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nconst MAT_NATIVE_DATE_FORMATS = {\n  parse: {\n    dateInput: null\n  },\n  display: {\n    dateInput: {\n      year: 'numeric',\n      month: 'numeric',\n      day: 'numeric'\n    },\n    monthYearLabel: {\n      year: 'numeric',\n      month: 'short'\n    },\n    dateA11yLabel: {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    },\n    monthYearA11yLabel: {\n      year: 'numeric',\n      month: 'long'\n    }\n  }\n};\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nclass NativeDateModule {}\n\nNativeDateModule.ɵfac = function NativeDateModule_Factory(t) {\n  return new (t || NativeDateModule)();\n};\n\nNativeDateModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NativeDateModule\n});\nNativeDateModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [{\n    provide: DateAdapter,\n    useClass: NativeDateAdapter\n  }]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NativeDateModule, [{\n    type: NgModule,\n    args: [{\n      providers: [{\n        provide: DateAdapter,\n        useClass: NativeDateAdapter\n      }]\n    }]\n  }], null, null);\n})();\n\nclass MatNativeDateModule {}\n\nMatNativeDateModule.ɵfac = function MatNativeDateModule_Factory(t) {\n  return new (t || MatNativeDateModule)();\n};\n\nMatNativeDateModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: MatNativeDateModule\n});\nMatNativeDateModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [{\n    provide: MAT_DATE_FORMATS,\n    useValue: MAT_NATIVE_DATE_FORMATS\n  }],\n  imports: [NativeDateModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatNativeDateModule, [{\n    type: NgModule,\n    args: [{\n      imports: [NativeDateModule],\n      providers: [{\n        provide: MAT_DATE_FORMATS,\n        useValue: MAT_NATIVE_DATE_FORMATS\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Error state matcher that matches when a control is invalid and dirty. */\n\n\nclass ShowOnDirtyErrorStateMatcher {\n  isErrorState(control, form) {\n    return !!(control && control.invalid && (control.dirty || form && form.submitted));\n  }\n\n}\n\nShowOnDirtyErrorStateMatcher.ɵfac = function ShowOnDirtyErrorStateMatcher_Factory(t) {\n  return new (t || ShowOnDirtyErrorStateMatcher)();\n};\n\nShowOnDirtyErrorStateMatcher.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ShowOnDirtyErrorStateMatcher,\n  factory: ShowOnDirtyErrorStateMatcher.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ShowOnDirtyErrorStateMatcher, [{\n    type: Injectable\n  }], null, null);\n})();\n/** Provider that defines how form controls behave with regards to displaying error messages. */\n\n\nclass ErrorStateMatcher {\n  isErrorState(control, form) {\n    return !!(control && control.invalid && (control.touched || form && form.submitted));\n  }\n\n}\n\nErrorStateMatcher.ɵfac = function ErrorStateMatcher_Factory(t) {\n  return new (t || ErrorStateMatcher)();\n};\n\nErrorStateMatcher.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ErrorStateMatcher,\n  factory: ErrorStateMatcher.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ErrorStateMatcher, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\n\n\nclass MatLine {}\n\nMatLine.ɵfac = function MatLine_Factory(t) {\n  return new (t || MatLine)();\n};\n\nMatLine.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MatLine,\n  selectors: [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]],\n  hostAttrs: [1, \"mat-line\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatLine, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-line], [matLine]',\n      host: {\n        'class': 'mat-line'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\n\n\nfunction setLines(lines, element, prefix = 'mat') {\n  // Note: doesn't need to unsubscribe, because `changes`\n  // gets completed by Angular when the view is destroyed.\n  lines.changes.pipe(startWith(lines)).subscribe(({\n    length\n  }) => {\n    setClass(element, `${prefix}-2-line`, false);\n    setClass(element, `${prefix}-3-line`, false);\n    setClass(element, `${prefix}-multi-line`, false);\n\n    if (length === 2 || length === 3) {\n      setClass(element, `${prefix}-${length}-line`, true);\n    } else if (length > 3) {\n      setClass(element, `${prefix}-multi-line`, true);\n    }\n  });\n}\n/** Adds or removes a class from an element. */\n\n\nfunction setClass(element, className, isAdd) {\n  element.nativeElement.classList.toggle(className, isAdd);\n}\n\nclass MatLineModule {}\n\nMatLineModule.ɵfac = function MatLineModule_Factory(t) {\n  return new (t || MatLineModule)();\n};\n\nMatLineModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: MatLineModule\n});\nMatLineModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [MatCommonModule, MatCommonModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatLineModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule],\n      exports: [MatLine, MatCommonModule],\n      declarations: [MatLine]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Reference to a previously launched ripple element.\n */\n\n\nclass RippleRef {\n  constructor(_renderer,\n  /** Reference to the ripple HTML element. */\n  element,\n  /** Ripple configuration used for the ripple. */\n  config,\n  /* Whether animations are forcibly disabled for ripples through CSS. */\n  _animationForciblyDisabledThroughCss = false) {\n    this._renderer = _renderer;\n    this.element = element;\n    this.config = config;\n    this._animationForciblyDisabledThroughCss = _animationForciblyDisabledThroughCss;\n    /** Current state of the ripple. */\n\n    this.state = 3\n    /* RippleState.HIDDEN */\n    ;\n  }\n  /** Fades out the ripple element. */\n\n\n  fadeOut() {\n    this._renderer.fadeOutRipple(this);\n  }\n\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Options used to bind a passive capturing event. */\n\n\nconst passiveCapturingEventOptions$1 = normalizePassiveListenerOptions({\n  passive: true,\n  capture: true\n});\n/** Manages events through delegation so that as few event handlers as possible are bound. */\n\nclass RippleEventManager {\n  constructor() {\n    this._events = new Map();\n    /** Event handler that is bound and which dispatches the events to the different targets. */\n\n    this._delegateEventHandler = event => {\n      const target = _getEventTarget(event);\n\n      if (target) {\n        this._events.get(event.type)?.forEach((handlers, element) => {\n          if (element === target || element.contains(target)) {\n            handlers.forEach(handler => handler.handleEvent(event));\n          }\n        });\n      }\n    };\n  }\n  /** Adds an event handler. */\n\n\n  addHandler(ngZone, name, element, handler) {\n    const handlersForEvent = this._events.get(name);\n\n    if (handlersForEvent) {\n      const handlersForElement = handlersForEvent.get(element);\n\n      if (handlersForElement) {\n        handlersForElement.add(handler);\n      } else {\n        handlersForEvent.set(element, new Set([handler]));\n      }\n    } else {\n      this._events.set(name, new Map([[element, new Set([handler])]]));\n\n      ngZone.runOutsideAngular(() => {\n        document.addEventListener(name, this._delegateEventHandler, passiveCapturingEventOptions$1);\n      });\n    }\n  }\n  /** Removes an event handler. */\n\n\n  removeHandler(name, element, handler) {\n    const handlersForEvent = this._events.get(name);\n\n    if (!handlersForEvent) {\n      return;\n    }\n\n    const handlersForElement = handlersForEvent.get(element);\n\n    if (!handlersForElement) {\n      return;\n    }\n\n    handlersForElement.delete(handler);\n\n    if (handlersForElement.size === 0) {\n      handlersForEvent.delete(element);\n    }\n\n    if (handlersForEvent.size === 0) {\n      this._events.delete(name);\n\n      document.removeEventListener(name, this._delegateEventHandler, passiveCapturingEventOptions$1);\n    }\n  }\n\n}\n/**\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n */\n\n\nconst defaultRippleAnimationConfig = {\n  enterDuration: 225,\n  exitDuration: 150\n};\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n */\n\nconst ignoreMouseEventsTimeout = 800;\n/** Options used to bind a passive capturing event. */\n\nconst passiveCapturingEventOptions = normalizePassiveListenerOptions({\n  passive: true,\n  capture: true\n});\n/** Events that signal that the pointer is down. */\n\nconst pointerDownEvents = ['mousedown', 'touchstart'];\n/** Events that signal that the pointer is up. */\n\nconst pointerUpEvents = ['mouseup', 'mouseleave', 'touchend', 'touchcancel'];\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * @docs-private\n */\n\nclass RippleRenderer {\n  constructor(_target, _ngZone, elementOrElementRef, _platform) {\n    this._target = _target;\n    this._ngZone = _ngZone;\n    this._platform = _platform;\n    /** Whether the pointer is currently down or not. */\n\n    this._isPointerDown = false;\n    /**\n     * Map of currently active ripple references.\n     * The ripple reference is mapped to its element event listeners.\n     * The reason why `| null` is used is that event listeners are added only\n     * when the condition is truthy (see the `_startFadeOutTransition` method).\n     */\n\n    this._activeRipples = new Map();\n    /** Whether pointer-up event listeners have been registered. */\n\n    this._pointerUpEventsRegistered = false; // Only do anything if we're on the browser.\n\n    if (_platform.isBrowser) {\n      this._containerElement = coerceElement(elementOrElementRef);\n    }\n  }\n  /**\n   * Fades in a ripple at the given coordinates.\n   * @param x Coordinate within the element, along the X axis at which to start the ripple.\n   * @param y Coordinate within the element, along the Y axis at which to start the ripple.\n   * @param config Extra ripple options.\n   */\n\n\n  fadeInRipple(x, y, config = {}) {\n    const containerRect = this._containerRect = this._containerRect || this._containerElement.getBoundingClientRect();\n\n    const animationConfig = { ...defaultRippleAnimationConfig,\n      ...config.animation\n    };\n\n    if (config.centered) {\n      x = containerRect.left + containerRect.width / 2;\n      y = containerRect.top + containerRect.height / 2;\n    }\n\n    const radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n    const offsetX = x - containerRect.left;\n    const offsetY = y - containerRect.top;\n    const enterDuration = animationConfig.enterDuration;\n    const ripple = document.createElement('div');\n    ripple.classList.add('mat-ripple-element');\n    ripple.style.left = `${offsetX - radius}px`;\n    ripple.style.top = `${offsetY - radius}px`;\n    ripple.style.height = `${radius * 2}px`;\n    ripple.style.width = `${radius * 2}px`; // If a custom color has been specified, set it as inline style. If no color is\n    // set, the default color will be applied through the ripple theme styles.\n\n    if (config.color != null) {\n      ripple.style.backgroundColor = config.color;\n    }\n\n    ripple.style.transitionDuration = `${enterDuration}ms`;\n\n    this._containerElement.appendChild(ripple); // By default the browser does not recalculate the styles of dynamically created\n    // ripple elements. This is critical to ensure that the `scale` animates properly.\n    // We enforce a style recalculation by calling `getComputedStyle` and *accessing* a property.\n    // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n\n\n    const computedStyles = window.getComputedStyle(ripple);\n    const userTransitionProperty = computedStyles.transitionProperty;\n    const userTransitionDuration = computedStyles.transitionDuration; // Note: We detect whether animation is forcibly disabled through CSS (e.g. through\n    // `transition: none` or `display: none`). This is technically unexpected since animations are\n    // controlled through the animation config, but this exists for backwards compatibility. This\n    // logic does not need to be super accurate since it covers some edge cases which can be easily\n    // avoided by users.\n\n    const animationForciblyDisabledThroughCss = userTransitionProperty === 'none' || // Note: The canonical unit for serialized CSS `<time>` properties is seconds. Additionally\n    // some browsers expand the duration for every property (in our case `opacity` and `transform`).\n    userTransitionDuration === '0s' || userTransitionDuration === '0s, 0s' || // If the container is 0x0, it's likely `display: none`.\n    containerRect.width === 0 && containerRect.height === 0; // Exposed reference to the ripple that will be returned.\n\n    const rippleRef = new RippleRef(this, ripple, config, animationForciblyDisabledThroughCss); // Start the enter animation by setting the transform/scale to 100%. The animation will\n    // execute as part of this statement because we forced a style recalculation before.\n    // Note: We use a 3d transform here in order to avoid an issue in Safari where\n    // the ripples aren't clipped when inside the shadow DOM (see #24028).\n\n    ripple.style.transform = 'scale3d(1, 1, 1)';\n    rippleRef.state = 0\n    /* RippleState.FADING_IN */\n    ;\n\n    if (!config.persistent) {\n      this._mostRecentTransientRipple = rippleRef;\n    }\n\n    let eventListeners = null; // Do not register the `transition` event listener if fade-in and fade-out duration\n    // are set to zero. The events won't fire anyway and we can save resources here.\n\n    if (!animationForciblyDisabledThroughCss && (enterDuration || animationConfig.exitDuration)) {\n      this._ngZone.runOutsideAngular(() => {\n        const onTransitionEnd = () => this._finishRippleTransition(rippleRef);\n\n        const onTransitionCancel = () => this._destroyRipple(rippleRef);\n\n        ripple.addEventListener('transitionend', onTransitionEnd); // If the transition is cancelled (e.g. due to DOM removal), we destroy the ripple\n        // directly as otherwise we would keep it part of the ripple container forever.\n        // https://www.w3.org/TR/css-transitions-1/#:~:text=no%20longer%20in%20the%20document.\n\n        ripple.addEventListener('transitioncancel', onTransitionCancel);\n        eventListeners = {\n          onTransitionEnd,\n          onTransitionCancel\n        };\n      });\n    } // Add the ripple reference to the list of all active ripples.\n\n\n    this._activeRipples.set(rippleRef, eventListeners); // In case there is no fade-in transition duration, we need to manually call the transition\n    // end listener because `transitionend` doesn't fire if there is no transition.\n\n\n    if (animationForciblyDisabledThroughCss || !enterDuration) {\n      this._finishRippleTransition(rippleRef);\n    }\n\n    return rippleRef;\n  }\n  /** Fades out a ripple reference. */\n\n\n  fadeOutRipple(rippleRef) {\n    // For ripples already fading out or hidden, this should be a noop.\n    if (rippleRef.state === 2\n    /* RippleState.FADING_OUT */\n    || rippleRef.state === 3\n    /* RippleState.HIDDEN */\n    ) {\n      return;\n    }\n\n    const rippleEl = rippleRef.element;\n    const animationConfig = { ...defaultRippleAnimationConfig,\n      ...rippleRef.config.animation\n    }; // This starts the fade-out transition and will fire the transition end listener that\n    // removes the ripple element from the DOM.\n\n    rippleEl.style.transitionDuration = `${animationConfig.exitDuration}ms`;\n    rippleEl.style.opacity = '0';\n    rippleRef.state = 2\n    /* RippleState.FADING_OUT */\n    ; // In case there is no fade-out transition duration, we need to manually call the\n    // transition end listener because `transitionend` doesn't fire if there is no transition.\n\n    if (rippleRef._animationForciblyDisabledThroughCss || !animationConfig.exitDuration) {\n      this._finishRippleTransition(rippleRef);\n    }\n  }\n  /** Fades out all currently active ripples. */\n\n\n  fadeOutAll() {\n    this._getActiveRipples().forEach(ripple => ripple.fadeOut());\n  }\n  /** Fades out all currently active non-persistent ripples. */\n\n\n  fadeOutAllNonPersistent() {\n    this._getActiveRipples().forEach(ripple => {\n      if (!ripple.config.persistent) {\n        ripple.fadeOut();\n      }\n    });\n  }\n  /** Sets up the trigger event listeners */\n\n\n  setupTriggerEvents(elementOrElementRef) {\n    const element = coerceElement(elementOrElementRef);\n\n    if (!this._platform.isBrowser || !element || element === this._triggerElement) {\n      return;\n    } // Remove all previously registered event listeners from the trigger element.\n\n\n    this._removeTriggerEvents();\n\n    this._triggerElement = element; // Use event delegation for the trigger events since they're\n    // set up during creation and are performance-sensitive.\n\n    pointerDownEvents.forEach(type => {\n      RippleRenderer._eventManager.addHandler(this._ngZone, type, element, this);\n    });\n  }\n  /**\n   * Handles all registered events.\n   * @docs-private\n   */\n\n\n  handleEvent(event) {\n    if (event.type === 'mousedown') {\n      this._onMousedown(event);\n    } else if (event.type === 'touchstart') {\n      this._onTouchStart(event);\n    } else {\n      this._onPointerUp();\n    } // If pointer-up events haven't been registered yet, do so now.\n    // We do this on-demand in order to reduce the total number of event listeners\n    // registered by the ripples, which speeds up the rendering time for large UIs.\n\n\n    if (!this._pointerUpEventsRegistered) {\n      // The events for hiding the ripple are bound directly on the trigger, because:\n      // 1. Some of them occur frequently (e.g. `mouseleave`) and any advantage we get from\n      // delegation will be diminished by having to look through all the data structures often.\n      // 2. They aren't as performance-sensitive, because they're bound only after the user\n      // has interacted with an element.\n      this._ngZone.runOutsideAngular(() => {\n        pointerUpEvents.forEach(type => {\n          this._triggerElement.addEventListener(type, this, passiveCapturingEventOptions);\n        });\n      });\n\n      this._pointerUpEventsRegistered = true;\n    }\n  }\n  /** Method that will be called if the fade-in or fade-in transition completed. */\n\n\n  _finishRippleTransition(rippleRef) {\n    if (rippleRef.state === 0\n    /* RippleState.FADING_IN */\n    ) {\n      this._startFadeOutTransition(rippleRef);\n    } else if (rippleRef.state === 2\n    /* RippleState.FADING_OUT */\n    ) {\n      this._destroyRipple(rippleRef);\n    }\n  }\n  /**\n   * Starts the fade-out transition of the given ripple if it's not persistent and the pointer\n   * is not held down anymore.\n   */\n\n\n  _startFadeOutTransition(rippleRef) {\n    const isMostRecentTransientRipple = rippleRef === this._mostRecentTransientRipple;\n    const {\n      persistent\n    } = rippleRef.config;\n    rippleRef.state = 1\n    /* RippleState.VISIBLE */\n    ; // When the timer runs out while the user has kept their pointer down, we want to\n    // keep only the persistent ripples and the latest transient ripple. We do this,\n    // because we don't want stacked transient ripples to appear after their enter\n    // animation has finished.\n\n    if (!persistent && (!isMostRecentTransientRipple || !this._isPointerDown)) {\n      rippleRef.fadeOut();\n    }\n  }\n  /** Destroys the given ripple by removing it from the DOM and updating its state. */\n\n\n  _destroyRipple(rippleRef) {\n    const eventListeners = this._activeRipples.get(rippleRef) ?? null;\n\n    this._activeRipples.delete(rippleRef); // Clear out the cached bounding rect if we have no more ripples.\n\n\n    if (!this._activeRipples.size) {\n      this._containerRect = null;\n    } // If the current ref is the most recent transient ripple, unset it\n    // avoid memory leaks.\n\n\n    if (rippleRef === this._mostRecentTransientRipple) {\n      this._mostRecentTransientRipple = null;\n    }\n\n    rippleRef.state = 3\n    /* RippleState.HIDDEN */\n    ;\n\n    if (eventListeners !== null) {\n      rippleRef.element.removeEventListener('transitionend', eventListeners.onTransitionEnd);\n      rippleRef.element.removeEventListener('transitioncancel', eventListeners.onTransitionCancel);\n    }\n\n    rippleRef.element.remove();\n  }\n  /** Function being called whenever the trigger is being pressed using mouse. */\n\n\n  _onMousedown(event) {\n    // Screen readers will fire fake mouse events for space/enter. Skip launching a\n    // ripple in this case for consistency with the non-screen-reader experience.\n    const isFakeMousedown = isFakeMousedownFromScreenReader(event);\n    const isSyntheticEvent = this._lastTouchStartEvent && Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n\n    if (!this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\n      this._isPointerDown = true;\n      this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\n    }\n  }\n  /** Function being called whenever the trigger is being pressed using touch. */\n\n\n  _onTouchStart(event) {\n    if (!this._target.rippleDisabled && !isFakeTouchstartFromScreenReader(event)) {\n      // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n      // events will launch a second ripple if we don't ignore mouse events for a specific\n      // time after a touchstart event.\n      this._lastTouchStartEvent = Date.now();\n      this._isPointerDown = true; // Use `changedTouches` so we skip any touches where the user put\n      // their finger down, but used another finger to tap the element again.\n\n      const touches = event.changedTouches;\n\n      for (let i = 0; i < touches.length; i++) {\n        this.fadeInRipple(touches[i].clientX, touches[i].clientY, this._target.rippleConfig);\n      }\n    }\n  }\n  /** Function being called whenever the trigger is being released. */\n\n\n  _onPointerUp() {\n    if (!this._isPointerDown) {\n      return;\n    }\n\n    this._isPointerDown = false; // Fade-out all ripples that are visible and not persistent.\n\n    this._getActiveRipples().forEach(ripple => {\n      // By default, only ripples that are completely visible will fade out on pointer release.\n      // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n      const isVisible = ripple.state === 1\n      /* RippleState.VISIBLE */\n      || ripple.config.terminateOnPointerUp && ripple.state === 0\n      /* RippleState.FADING_IN */\n      ;\n\n      if (!ripple.config.persistent && isVisible) {\n        ripple.fadeOut();\n      }\n    });\n  }\n\n  _getActiveRipples() {\n    return Array.from(this._activeRipples.keys());\n  }\n  /** Removes previously registered event listeners from the trigger element. */\n\n\n  _removeTriggerEvents() {\n    const trigger = this._triggerElement;\n\n    if (trigger) {\n      pointerDownEvents.forEach(type => RippleRenderer._eventManager.removeHandler(type, trigger, this));\n\n      if (this._pointerUpEventsRegistered) {\n        pointerUpEvents.forEach(type => trigger.removeEventListener(type, this, passiveCapturingEventOptions));\n      }\n    }\n  }\n\n}\n\nRippleRenderer._eventManager = new RippleEventManager();\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n */\n\nfunction distanceToFurthestCorner(x, y, rect) {\n  const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n  const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n  return Math.sqrt(distX * distX + distY * distY);\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Injection token that can be used to specify the global ripple options. */\n\n\nconst MAT_RIPPLE_GLOBAL_OPTIONS = new InjectionToken('mat-ripple-global-options');\n\nclass MatRipple {\n  /**\n   * Whether click events will not trigger the ripple. Ripples can be still launched manually\n   * by using the `launch()` method.\n   */\n  get disabled() {\n    return this._disabled;\n  }\n\n  set disabled(value) {\n    if (value) {\n      this.fadeOutAllNonPersistent();\n    }\n\n    this._disabled = value;\n\n    this._setupTriggerEventsIfEnabled();\n  }\n  /**\n   * The element that triggers the ripple when click events are received.\n   * Defaults to the directive's host element.\n   */\n\n\n  get trigger() {\n    return this._trigger || this._elementRef.nativeElement;\n  }\n\n  set trigger(trigger) {\n    this._trigger = trigger;\n\n    this._setupTriggerEventsIfEnabled();\n  }\n\n  constructor(_elementRef, ngZone, platform, globalOptions, _animationMode) {\n    this._elementRef = _elementRef;\n    this._animationMode = _animationMode;\n    /**\n     * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n     * will be the distance from the center of the ripple to the furthest corner of the host element's\n     * bounding rectangle.\n     */\n\n    this.radius = 0;\n    this._disabled = false;\n    /** Whether ripple directive is initialized and the input bindings are set. */\n\n    this._isInitialized = false;\n    this._globalOptions = globalOptions || {};\n    this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\n  }\n\n  ngOnInit() {\n    this._isInitialized = true;\n\n    this._setupTriggerEventsIfEnabled();\n  }\n\n  ngOnDestroy() {\n    this._rippleRenderer._removeTriggerEvents();\n  }\n  /** Fades out all currently showing ripple elements. */\n\n\n  fadeOutAll() {\n    this._rippleRenderer.fadeOutAll();\n  }\n  /** Fades out all currently showing non-persistent ripple elements. */\n\n\n  fadeOutAllNonPersistent() {\n    this._rippleRenderer.fadeOutAllNonPersistent();\n  }\n  /**\n   * Ripple configuration from the directive's input values.\n   * @docs-private Implemented as part of RippleTarget\n   */\n\n\n  get rippleConfig() {\n    return {\n      centered: this.centered,\n      radius: this.radius,\n      color: this.color,\n      animation: { ...this._globalOptions.animation,\n        ...(this._animationMode === 'NoopAnimations' ? {\n          enterDuration: 0,\n          exitDuration: 0\n        } : {}),\n        ...this.animation\n      },\n      terminateOnPointerUp: this._globalOptions.terminateOnPointerUp\n    };\n  }\n  /**\n   * Whether ripples on pointer-down are disabled or not.\n   * @docs-private Implemented as part of RippleTarget\n   */\n\n\n  get rippleDisabled() {\n    return this.disabled || !!this._globalOptions.disabled;\n  }\n  /** Sets up the trigger event listeners if ripples are enabled. */\n\n\n  _setupTriggerEventsIfEnabled() {\n    if (!this.disabled && this._isInitialized) {\n      this._rippleRenderer.setupTriggerEvents(this.trigger);\n    }\n  }\n  /** Launches a manual ripple at the specified coordinated or just by the ripple config. */\n\n\n  launch(configOrX, y = 0, config) {\n    if (typeof configOrX === 'number') {\n      return this._rippleRenderer.fadeInRipple(configOrX, y, { ...this.rippleConfig,\n        ...config\n      });\n    } else {\n      return this._rippleRenderer.fadeInRipple(0, 0, { ...this.rippleConfig,\n        ...configOrX\n      });\n    }\n  }\n\n}\n\nMatRipple.ɵfac = function MatRipple_Factory(t) {\n  return new (t || MatRipple)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1$1.Platform), i0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\nMatRipple.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MatRipple,\n  selectors: [[\"\", \"mat-ripple\", \"\"], [\"\", \"matRipple\", \"\"]],\n  hostAttrs: [1, \"mat-ripple\"],\n  hostVars: 2,\n  hostBindings: function MatRipple_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"mat-ripple-unbounded\", ctx.unbounded);\n    }\n  },\n  inputs: {\n    color: [\"matRippleColor\", \"color\"],\n    unbounded: [\"matRippleUnbounded\", \"unbounded\"],\n    centered: [\"matRippleCentered\", \"centered\"],\n    radius: [\"matRippleRadius\", \"radius\"],\n    animation: [\"matRippleAnimation\", \"animation\"],\n    disabled: [\"matRippleDisabled\", \"disabled\"],\n    trigger: [\"matRippleTrigger\", \"trigger\"]\n  },\n  exportAs: [\"matRipple\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatRipple, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-ripple], [matRipple]',\n      exportAs: 'matRipple',\n      host: {\n        'class': 'mat-ripple',\n        '[class.mat-ripple-unbounded]': 'unbounded'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i1$1.Platform\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    color: [{\n      type: Input,\n      args: ['matRippleColor']\n    }],\n    unbounded: [{\n      type: Input,\n      args: ['matRippleUnbounded']\n    }],\n    centered: [{\n      type: Input,\n      args: ['matRippleCentered']\n    }],\n    radius: [{\n      type: Input,\n      args: ['matRippleRadius']\n    }],\n    animation: [{\n      type: Input,\n      args: ['matRippleAnimation']\n    }],\n    disabled: [{\n      type: Input,\n      args: ['matRippleDisabled']\n    }],\n    trigger: [{\n      type: Input,\n      args: ['matRippleTrigger']\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nclass MatRippleModule {}\n\nMatRippleModule.ɵfac = function MatRippleModule_Factory(t) {\n  return new (t || MatRippleModule)();\n};\n\nMatRippleModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: MatRippleModule\n});\nMatRippleModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [MatCommonModule, MatCommonModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatRippleModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule],\n      exports: [MatRipple, MatCommonModule],\n      declarations: [MatRipple]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\n\n\nclass MatPseudoCheckbox {\n  constructor(_animationMode) {\n    this._animationMode = _animationMode;\n    /** Display state of the checkbox. */\n\n    this.state = 'unchecked';\n    /** Whether the checkbox is disabled. */\n\n    this.disabled = false;\n  }\n\n}\n\nMatPseudoCheckbox.ɵfac = function MatPseudoCheckbox_Factory(t) {\n  return new (t || MatPseudoCheckbox)(i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\nMatPseudoCheckbox.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MatPseudoCheckbox,\n  selectors: [[\"mat-pseudo-checkbox\"]],\n  hostAttrs: [1, \"mat-pseudo-checkbox\"],\n  hostVars: 8,\n  hostBindings: function MatPseudoCheckbox_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"mat-pseudo-checkbox-indeterminate\", ctx.state === \"indeterminate\")(\"mat-pseudo-checkbox-checked\", ctx.state === \"checked\")(\"mat-pseudo-checkbox-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    }\n  },\n  inputs: {\n    state: \"state\",\n    disabled: \"disabled\"\n  },\n  decls: 0,\n  vars: 0,\n  template: function MatPseudoCheckbox_Template(rf, ctx) {},\n  styles: [\".mat-pseudo-checkbox{border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:rgba(0,0,0,0)}.mat-pseudo-checkbox._mat-animation-noopable{transition:none !important;animation:none !important}.mat-pseudo-checkbox._mat-animation-noopable::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{left:1px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{left:1px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}.mat-pseudo-checkbox{width:18px;height:18px}.mat-pseudo-checkbox-indeterminate::after{top:6px;width:12px}.mat-pseudo-checkbox-checked::after{top:2.7px;width:10px;height:4px}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatPseudoCheckbox, [{\n    type: Component,\n    args: [{\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      selector: 'mat-pseudo-checkbox',\n      template: '',\n      host: {\n        'class': 'mat-pseudo-checkbox',\n        '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n        '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n        '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n      },\n      styles: [\".mat-pseudo-checkbox{border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:rgba(0,0,0,0)}.mat-pseudo-checkbox._mat-animation-noopable{transition:none !important;animation:none !important}.mat-pseudo-checkbox._mat-animation-noopable::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{left:1px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{left:1px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}.mat-pseudo-checkbox{width:18px;height:18px}.mat-pseudo-checkbox-indeterminate::after{top:6px;width:12px}.mat-pseudo-checkbox-checked::after{top:2.7px;width:10px;height:4px}\"]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    state: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nclass MatPseudoCheckboxModule {}\n\nMatPseudoCheckboxModule.ɵfac = function MatPseudoCheckboxModule_Factory(t) {\n  return new (t || MatPseudoCheckboxModule)();\n};\n\nMatPseudoCheckboxModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: MatPseudoCheckboxModule\n});\nMatPseudoCheckboxModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [MatCommonModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatPseudoCheckboxModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule],\n      exports: [MatPseudoCheckbox],\n      declarations: [MatPseudoCheckbox]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Injection token used to provide the parent component to options.\n */\n\n\nconst MAT_OPTION_PARENT_COMPONENT = new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Notes on the accessibility pattern used for `mat-optgroup`.\n// The option group has two different \"modes\": regular and inert. The regular mode uses the\n// recommended a11y pattern which has `role=\"group\"` on the group element with `aria-labelledby`\n// pointing to the label. This works for `mat-select`, but it seems to hit a bug for autocomplete\n// under VoiceOver where the group doesn't get read out at all. The bug appears to be that if\n// there's __any__ a11y-related attribute on the group (e.g. `role` or `aria-labelledby`),\n// VoiceOver on Safari won't read it out.\n// We've introduced the `inert` mode as a workaround. Under this mode, all a11y attributes are\n// removed from the group, and we get the screen reader to read out the group label by mirroring it\n// inside an invisible element in the option. This is sub-optimal, because the screen reader will\n// repeat the group label on each navigation, whereas the default pattern only reads the group when\n// the user enters a new group. The following alternate approaches were considered:\n// 1. Reading out the group label using the `LiveAnnouncer` solves the problem, but we can't control\n//    when the text will be read out so sometimes it comes in too late or never if the user\n//    navigates quickly.\n// 2. `<mat-option aria-describedby=\"groupLabel\"` - This works on Safari, but VoiceOver in Chrome\n//    won't read out the description at all.\n// 3. `<mat-option aria-labelledby=\"optionLabel groupLabel\"` - This works on Chrome, but Safari\n//     doesn't read out the text at all. Furthermore, on\n// Boilerplate for applying mixins to MatOptgroup.\n\n/** @docs-private */\n\nconst _MatOptgroupMixinBase = mixinDisabled(class {}); // Counter for unique group ids.\n\n\nlet _uniqueOptgroupIdCounter = 0;\n\nclass _MatOptgroupBase extends _MatOptgroupMixinBase {\n  constructor(parent) {\n    super();\n    /** Unique id for the underlying label. */\n\n    this._labelId = `mat-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n    this._inert = parent?.inertGroups ?? false;\n  }\n\n}\n\n_MatOptgroupBase.ɵfac = function _MatOptgroupBase_Factory(t) {\n  return new (t || _MatOptgroupBase)(i0.ɵɵdirectiveInject(MAT_OPTION_PARENT_COMPONENT, 8));\n};\n\n_MatOptgroupBase.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: _MatOptgroupBase,\n  inputs: {\n    label: \"label\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(_MatOptgroupBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_OPTION_PARENT_COMPONENT]\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    label: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Injection token that can be used to reference instances of `MatOptgroup`. It serves as\n * alternative token to the actual `MatOptgroup` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\n\n\nconst MAT_OPTGROUP = new InjectionToken('MatOptgroup');\n/**\n * Component that is used to group instances of `mat-option`.\n */\n\nclass MatOptgroup extends _MatOptgroupBase {}\n\nMatOptgroup.ɵfac = /* @__PURE__ */function () {\n  let ɵMatOptgroup_BaseFactory;\n  return function MatOptgroup_Factory(t) {\n    return (ɵMatOptgroup_BaseFactory || (ɵMatOptgroup_BaseFactory = i0.ɵɵgetInheritedFactory(MatOptgroup)))(t || MatOptgroup);\n  };\n}();\n\nMatOptgroup.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MatOptgroup,\n  selectors: [[\"mat-optgroup\"]],\n  hostAttrs: [1, \"mat-mdc-optgroup\"],\n  hostVars: 3,\n  hostBindings: function MatOptgroup_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"role\", ctx._inert ? null : \"group\")(\"aria-disabled\", ctx._inert ? null : ctx.disabled.toString())(\"aria-labelledby\", ctx._inert ? null : ctx._labelId);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\"\n  },\n  exportAs: [\"matOptgroup\"],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: MAT_OPTGROUP,\n    useExisting: MatOptgroup\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c1,\n  decls: 5,\n  vars: 4,\n  consts: [[\"aria-hidden\", \"true\", 1, \"mat-mdc-optgroup-label\", 3, \"id\"], [1, \"mdc-list-item__primary-text\"]],\n  template: function MatOptgroup_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef(_c0);\n      i0.ɵɵelementStart(0, \"span\", 0)(1, \"span\", 1);\n      i0.ɵɵtext(2);\n      i0.ɵɵprojection(3);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵprojection(4, 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"mdc-list-item--disabled\", ctx.disabled);\n      i0.ɵɵproperty(\"id\", ctx._labelId);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"\", ctx.label, \" \");\n    }\n  },\n  styles: [\".mat-mdc-optgroup-label{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;padding-left:16px;padding-right:16px;min-height:48px}.mat-mdc-optgroup-label:focus{outline:none}[dir=rtl] .mat-mdc-optgroup-label,.mat-mdc-optgroup-label[dir=rtl]{padding-left:16px;padding-right:16px}.mat-mdc-optgroup-label.mdc-list-item--disabled{opacity:.38}.mat-mdc-optgroup-label .mdc-list-item__primary-text{white-space:normal}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatOptgroup, [{\n    type: Component,\n    args: [{\n      selector: 'mat-optgroup',\n      exportAs: 'matOptgroup',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      inputs: ['disabled'],\n      host: {\n        'class': 'mat-mdc-optgroup',\n        '[attr.role]': '_inert ? null : \"group\"',\n        '[attr.aria-disabled]': '_inert ? null : disabled.toString()',\n        '[attr.aria-labelledby]': '_inert ? null : _labelId'\n      },\n      providers: [{\n        provide: MAT_OPTGROUP,\n        useExisting: MatOptgroup\n      }],\n      template: \"<span\\n  class=\\\"mat-mdc-optgroup-label\\\"\\n  aria-hidden=\\\"true\\\"\\n  [class.mdc-list-item--disabled]=\\\"disabled\\\"\\n  [id]=\\\"_labelId\\\">\\n  <span class=\\\"mdc-list-item__primary-text\\\">{{ label }} <ng-content></ng-content></span>\\n</span>\\n\\n<ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\\n\",\n      styles: [\".mat-mdc-optgroup-label{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;padding-left:16px;padding-right:16px;min-height:48px}.mat-mdc-optgroup-label:focus{outline:none}[dir=rtl] .mat-mdc-optgroup-label,.mat-mdc-optgroup-label[dir=rtl]{padding-left:16px;padding-right:16px}.mat-mdc-optgroup-label.mdc-list-item--disabled{opacity:.38}.mat-mdc-optgroup-label .mdc-list-item__primary-text{white-space:normal}\"]\n    }]\n  }], null, null);\n})();\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\n\n\nlet _uniqueIdCounter = 0;\n/** Event object emitted by MatOption when selected or deselected. */\n\nclass MatOptionSelectionChange {\n  constructor(\n  /** Reference to the option that emitted the event. */\n  source,\n  /** Whether the change in the option's value was a result of a user action. */\n  isUserInput = false) {\n    this.source = source;\n    this.isUserInput = isUserInput;\n  }\n\n}\n\nclass _MatOptionBase {\n  /** Whether the wrapping component is in multiple selection mode. */\n  get multiple() {\n    return this._parent && this._parent.multiple;\n  }\n  /** Whether or not the option is currently selected. */\n\n\n  get selected() {\n    return this._selected;\n  }\n  /** Whether the option is disabled. */\n\n\n  get disabled() {\n    return this.group && this.group.disabled || this._disabled;\n  }\n\n  set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  /** Whether ripples for the option are disabled. */\n\n\n  get disableRipple() {\n    return !!(this._parent && this._parent.disableRipple);\n  }\n\n  constructor(_element, _changeDetectorRef, _parent, group) {\n    this._element = _element;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._parent = _parent;\n    this.group = group;\n    this._selected = false;\n    this._active = false;\n    this._disabled = false;\n    this._mostRecentViewValue = '';\n    /** The unique ID of the option. */\n\n    this.id = `mat-option-${_uniqueIdCounter++}`;\n    /** Event emitted when the option is selected or deselected. */\n    // tslint:disable-next-line:no-output-on-prefix\n\n    this.onSelectionChange = new EventEmitter();\n    /** Emits when the state of the option changes and any parents have to be notified. */\n\n    this._stateChanges = new Subject();\n  }\n  /**\n   * Whether or not the option is currently active and ready to be selected.\n   * An active option displays styles as if it is focused, but the\n   * focus is actually retained somewhere else. This comes in handy\n   * for components like autocomplete where focus must remain on the input.\n   */\n\n\n  get active() {\n    return this._active;\n  }\n  /**\n   * The displayed value of the option. It is necessary to show the selected option in the\n   * select's trigger.\n   */\n\n\n  get viewValue() {\n    // TODO(kara): Add input property alternative for node envs.\n    return (this._text?.nativeElement.textContent || '').trim();\n  }\n  /** Selects the option. */\n\n\n  select() {\n    if (!this._selected) {\n      this._selected = true;\n\n      this._changeDetectorRef.markForCheck();\n\n      this._emitSelectionChangeEvent();\n    }\n  }\n  /** Deselects the option. */\n\n\n  deselect() {\n    if (this._selected) {\n      this._selected = false;\n\n      this._changeDetectorRef.markForCheck();\n\n      this._emitSelectionChangeEvent();\n    }\n  }\n  /** Sets focus onto this option. */\n\n\n  focus(_origin, options) {\n    // Note that we aren't using `_origin`, but we need to keep it because some internal consumers\n    // use `MatOption` in a `FocusKeyManager` and we need it to match `FocusableOption`.\n    const element = this._getHostElement();\n\n    if (typeof element.focus === 'function') {\n      element.focus(options);\n    }\n  }\n  /**\n   * This method sets display styles on the option to make it appear\n   * active. This is used by the ActiveDescendantKeyManager so key\n   * events will display the proper options as active on arrow key events.\n   */\n\n\n  setActiveStyles() {\n    if (!this._active) {\n      this._active = true;\n\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  /**\n   * This method removes display styles on the option that made it appear\n   * active. This is used by the ActiveDescendantKeyManager so key\n   * events will display the proper options as active on arrow key events.\n   */\n\n\n  setInactiveStyles() {\n    if (this._active) {\n      this._active = false;\n\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  /** Gets the label to be used when determining whether the option should be focused. */\n\n\n  getLabel() {\n    return this.viewValue;\n  }\n  /** Ensures the option is selected when activated from the keyboard. */\n\n\n  _handleKeydown(event) {\n    if ((event.keyCode === ENTER || event.keyCode === SPACE) && !hasModifierKey(event)) {\n      this._selectViaInteraction(); // Prevent the page from scrolling down and form submits.\n\n\n      event.preventDefault();\n    }\n  }\n  /**\n   * `Selects the option while indicating the selection came from the user. Used to\n   * determine if the select's view -> model callback should be invoked.`\n   */\n\n\n  _selectViaInteraction() {\n    if (!this.disabled) {\n      this._selected = this.multiple ? !this._selected : true;\n\n      this._changeDetectorRef.markForCheck();\n\n      this._emitSelectionChangeEvent(true);\n    }\n  }\n  /**\n   * Gets the `aria-selected` value for the option. We explicitly omit the `aria-selected`\n   * attribute from single-selection, unselected options. Including the `aria-selected=\"false\"`\n   * attributes adds a significant amount of noise to screen-reader users without providing useful\n   * information.\n   */\n\n\n  _getAriaSelected() {\n    return this.selected || (this.multiple ? false : null);\n  }\n  /** Returns the correct tabindex for the option depending on disabled state. */\n\n\n  _getTabIndex() {\n    return this.disabled ? '-1' : '0';\n  }\n  /** Gets the host DOM element. */\n\n\n  _getHostElement() {\n    return this._element.nativeElement;\n  }\n\n  ngAfterViewChecked() {\n    // Since parent components could be using the option's label to display the selected values\n    // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n    // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n    // relatively cheap, however we still limit them only to selected options in order to avoid\n    // hitting the DOM too often.\n    if (this._selected) {\n      const viewValue = this.viewValue;\n\n      if (viewValue !== this._mostRecentViewValue) {\n        if (this._mostRecentViewValue) {\n          this._stateChanges.next();\n        }\n\n        this._mostRecentViewValue = viewValue;\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this._stateChanges.complete();\n  }\n  /** Emits the selection change event. */\n\n\n  _emitSelectionChangeEvent(isUserInput = false) {\n    this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n  }\n\n}\n\n_MatOptionBase.ɵfac = function _MatOptionBase_Factory(t) {\n  i0.ɵɵinvalidFactory();\n};\n\n_MatOptionBase.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: _MatOptionBase,\n  viewQuery: function _MatOptionBase_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c2, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._text = _t.first);\n    }\n  },\n  inputs: {\n    value: \"value\",\n    id: \"id\",\n    disabled: \"disabled\"\n  },\n  outputs: {\n    onSelectionChange: \"onSelectionChange\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(_MatOptionBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: undefined\n    }, {\n      type: _MatOptgroupBase\n    }];\n  }, {\n    value: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    onSelectionChange: [{\n      type: Output\n    }],\n    _text: [{\n      type: ViewChild,\n      args: ['text', {\n        static: true\n      }]\n    }]\n  });\n})();\n/**\n * Single option inside of a `<mat-select>` element.\n */\n\n\nclass MatOption extends _MatOptionBase {\n  constructor(element, changeDetectorRef, parent, group) {\n    super(element, changeDetectorRef, parent, group);\n  }\n\n}\n\nMatOption.ɵfac = function MatOption_Factory(t) {\n  return new (t || MatOption)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(MAT_OPTION_PARENT_COMPONENT, 8), i0.ɵɵdirectiveInject(MAT_OPTGROUP, 8));\n};\n\nMatOption.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MatOption,\n  selectors: [[\"mat-option\"]],\n  hostAttrs: [\"role\", \"option\", 1, \"mat-mdc-option\", \"mat-mdc-focus-indicator\", \"mdc-list-item\"],\n  hostVars: 12,\n  hostBindings: function MatOption_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function MatOption_click_HostBindingHandler() {\n        return ctx._selectViaInteraction();\n      })(\"keydown\", function MatOption_keydown_HostBindingHandler($event) {\n        return ctx._handleKeydown($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵhostProperty(\"id\", ctx.id);\n      i0.ɵɵattribute(\"tabindex\", ctx._getTabIndex())(\"aria-selected\", ctx._getAriaSelected())(\"aria-disabled\", ctx.disabled.toString());\n      i0.ɵɵclassProp(\"mdc-list-item--selected\", ctx.selected)(\"mat-mdc-option-multiple\", ctx.multiple)(\"mat-mdc-option-active\", ctx.active)(\"mdc-list-item--disabled\", ctx.disabled);\n    }\n  },\n  exportAs: [\"matOption\"],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c4,\n  decls: 7,\n  vars: 4,\n  consts: [[\"class\", \"mat-mdc-option-pseudo-checkbox\", 3, \"state\", \"disabled\", 4, \"ngIf\"], [1, \"mdc-list-item__primary-text\"], [\"text\", \"\"], [\"class\", \"cdk-visually-hidden\", 4, \"ngIf\"], [\"mat-ripple\", \"\", 1, \"mat-mdc-option-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-mdc-option-pseudo-checkbox\", 3, \"state\", \"disabled\"], [1, \"cdk-visually-hidden\"]],\n  template: function MatOption_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef(_c3);\n      i0.ɵɵtemplate(0, MatOption_mat_pseudo_checkbox_0_Template, 1, 2, \"mat-pseudo-checkbox\", 0);\n      i0.ɵɵprojection(1);\n      i0.ɵɵelementStart(2, \"span\", 1, 2);\n      i0.ɵɵprojection(4, 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(5, MatOption_span_5_Template, 2, 1, \"span\", 3);\n      i0.ɵɵelement(6, \"div\", 4);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.multiple);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.group && ctx.group._inert);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx.disabled || ctx.disableRipple);\n    }\n  },\n  dependencies: [MatRipple, i3.NgIf, MatPseudoCheckbox],\n  styles: [\".mat-mdc-option{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;padding-left:16px;padding-right:16px;-webkit-user-select:none;user-select:none;cursor:pointer;-webkit-tap-highlight-color:rgba(0,0,0,0);min-height:48px}.mat-mdc-option:focus{outline:none}[dir=rtl] .mat-mdc-option,.mat-mdc-option[dir=rtl]{padding-left:16px;padding-right:16px}.mat-mdc-option.mdc-list-item{align-items:center}.mat-mdc-option.mdc-list-item--disabled{opacity:.38;cursor:default}.mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:32px}[dir=rtl] .mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:16px;padding-right:32px}.mat-mdc-option .mat-icon,.mat-mdc-option .mat-pseudo-checkbox{margin-right:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-icon,[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox{margin-right:0;margin-left:16px}.mat-mdc-option .mat-mdc-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-option .mdc-list-item__primary-text{white-space:normal;font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;font-family:inherit;text-decoration:inherit;text-transform:inherit}.cdk-high-contrast-active .mat-mdc-option.mdc-list-item--selected:not(.mat-mdc-option-multiple)::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}[dir=rtl] .cdk-high-contrast-active .mat-mdc-option.mdc-list-item--selected:not(.mat-mdc-option-multiple)::after{right:auto;left:16px}.mat-mdc-option-active::before{content:\\\"\\\"}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatOption, [{\n    type: Component,\n    args: [{\n      selector: 'mat-option',\n      exportAs: 'matOption',\n      host: {\n        'role': 'option',\n        '[attr.tabindex]': '_getTabIndex()',\n        '[class.mdc-list-item--selected]': 'selected',\n        '[class.mat-mdc-option-multiple]': 'multiple',\n        '[class.mat-mdc-option-active]': 'active',\n        '[class.mdc-list-item--disabled]': 'disabled',\n        '[id]': 'id',\n        '[attr.aria-selected]': '_getAriaSelected()',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '(click)': '_selectViaInteraction()',\n        '(keydown)': '_handleKeydown($event)',\n        'class': 'mat-mdc-option mat-mdc-focus-indicator mdc-list-item'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-mdc-option-pseudo-checkbox\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n<ng-content select=\\\"mat-icon\\\"></ng-content>\\n\\n<span class=\\\"mdc-list-item__primary-text\\\" #text><ng-content></ng-content></span>\\n\\n<!-- See a11y notes inside optgroup.ts for context behind this element. -->\\n<span class=\\\"cdk-visually-hidden\\\" *ngIf=\\\"group && group._inert\\\">({{ group.label }})</span>\\n\\n<div class=\\\"mat-mdc-option-ripple\\\" mat-ripple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disabled || disableRipple\\\">\\n</div>\\n\",\n      styles: [\".mat-mdc-option{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;padding-left:16px;padding-right:16px;-webkit-user-select:none;user-select:none;cursor:pointer;-webkit-tap-highlight-color:rgba(0,0,0,0);min-height:48px}.mat-mdc-option:focus{outline:none}[dir=rtl] .mat-mdc-option,.mat-mdc-option[dir=rtl]{padding-left:16px;padding-right:16px}.mat-mdc-option.mdc-list-item{align-items:center}.mat-mdc-option.mdc-list-item--disabled{opacity:.38;cursor:default}.mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:32px}[dir=rtl] .mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:16px;padding-right:32px}.mat-mdc-option .mat-icon,.mat-mdc-option .mat-pseudo-checkbox{margin-right:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-icon,[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox{margin-right:0;margin-left:16px}.mat-mdc-option .mat-mdc-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-option .mdc-list-item__primary-text{white-space:normal;font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;font-family:inherit;text-decoration:inherit;text-transform:inherit}.cdk-high-contrast-active .mat-mdc-option.mdc-list-item--selected:not(.mat-mdc-option-multiple)::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}[dir=rtl] .cdk-high-contrast-active .mat-mdc-option.mdc-list-item--selected:not(.mat-mdc-option-multiple)::after{right:auto;left:16px}.mat-mdc-option-active::before{content:\\\"\\\"}\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_OPTION_PARENT_COMPONENT]\n      }]\n    }, {\n      type: MatOptgroup,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_OPTGROUP]\n      }]\n    }];\n  }, null);\n})();\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\n\n\nfunction _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\n  if (optionGroups.length) {\n    let optionsArray = options.toArray();\n    let groups = optionGroups.toArray();\n    let groupCounter = 0;\n\n    for (let i = 0; i < optionIndex + 1; i++) {\n      if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n        groupCounter++;\n      }\n    }\n\n    return groupCounter;\n  }\n\n  return 0;\n}\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionOffset Offset of the option from the top of the panel.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\n\n\nfunction _getOptionScrollPosition(optionOffset, optionHeight, currentScrollPosition, panelHeight) {\n  if (optionOffset < currentScrollPosition) {\n    return optionOffset;\n  }\n\n  if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n    return Math.max(0, optionOffset - panelHeight + optionHeight);\n  }\n\n  return currentScrollPosition;\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nclass MatOptionModule {}\n\nMatOptionModule.ɵfac = function MatOptionModule_Factory(t) {\n  return new (t || MatOptionModule)();\n};\n\nMatOptionModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: MatOptionModule\n});\nMatOptionModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatOptionModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule],\n      exports: [MatOption, MatOptgroup],\n      declarations: [MatOption, MatOptgroup]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { AnimationCurves, AnimationDurations, DateAdapter, ErrorStateMatcher, MATERIAL_SANITY_CHECKS, MAT_DATE_FORMATS, MAT_DATE_LOCALE, MAT_DATE_LOCALE_FACTORY, MAT_NATIVE_DATE_FORMATS, MAT_OPTGROUP, MAT_OPTION_PARENT_COMPONENT, MAT_RIPPLE_GLOBAL_OPTIONS, MatCommonModule, MatLine, MatLineModule, MatNativeDateModule, MatOptgroup, MatOption, MatOptionModule, MatOptionSelectionChange, MatPseudoCheckbox, MatPseudoCheckboxModule, MatRipple, MatRippleModule, NativeDateAdapter, NativeDateModule, RippleRef, RippleRenderer, ShowOnDirtyErrorStateMatcher, VERSION, _MatOptgroupBase, _MatOptionBase, _countGroupLabelsBeforeOption, _getOptionScrollPosition, defaultRippleAnimationConfig, mixinColor, mixinDisableRipple, mixinDisabled, mixinErrorState, mixinInitialized, mixinTabIndex, setLines };","map":{"version":3,"names":["i0","Version","InjectionToken","NgModule","Optional","Inject","inject","LOCALE_ID","Injectable","Directive","Input","Component","ViewEncapsulation","ChangeDetectionStrategy","EventEmitter","Output","ViewChild","i1","isFakeMousedownFromScreenReader","isFakeTouchstartFromScreenReader","BidiModule","VERSION","VERSION$1","i3","DOCUMENT","CommonModule","i1$1","_isTestEnvironment","normalizePassiveListenerOptions","_getEventTarget","coerceBooleanProperty","coerceNumberProperty","coerceElement","Observable","Subject","startWith","ANIMATION_MODULE_TYPE","ENTER","SPACE","hasModifierKey","AnimationCurves","STANDARD_CURVE","DECELERATION_CURVE","ACCELERATION_CURVE","SHARP_CURVE","AnimationDurations","COMPLEX","ENTERING","EXITING","MATERIAL_SANITY_CHECKS_FACTORY","MATERIAL_SANITY_CHECKS","providedIn","factory","MatCommonModule","constructor","highContrastModeDetector","_sanityChecks","_document","_hasDoneGlobalChecks","_applyBodyHighContrastModeCssClasses","ngDevMode","_checkIsEnabled","_checkDoctypeIsDefined","_checkThemeIsPresent","_checkCdkVersionMatch","name","ɵfac","HighContrastModeDetector","ɵmod","ɵinj","type","args","imports","exports","undefined","decorators","Document","doc","doctype","console","warn","body","getComputedStyle","testElement","createElement","classList","add","appendChild","computedStyle","display","remove","full","mixinDisabled","base","disabled","_disabled","value","mixinColor","defaultColor","color","_color","colorPalette","_elementRef","nativeElement","mixinDisableRipple","disableRipple","_disableRipple","mixinTabIndex","defaultTabIndex","tabIndex","_tabIndex","mixinErrorState","updateErrorState","oldState","errorState","parent","_parentFormGroup","_parentForm","matcher","errorStateMatcher","_defaultErrorStateMatcher","control","ngControl","newState","isErrorState","stateChanges","next","mixinInitialized","_isInitialized","_pendingSubscribers","initialized","subscriber","_notifySubscriber","push","_markInitialized","Error","forEach","complete","MAT_DATE_LOCALE","MAT_DATE_LOCALE_FACTORY","DateAdapter","_localeChanges","localeChanges","getValidDateOrNull","obj","isDateInstance","isValid","deserialize","invalid","setLocale","locale","compareDate","first","second","getYear","getMonth","getDate","sameDate","firstValid","secondValid","clampDate","date","min","max","MAT_DATE_FORMATS","ISO_8601_REGEX","range","length","valueFunction","valuesArray","Array","i","NativeDateAdapter","matDateLocale","_platform","useUtcForDisplay","getFullYear","getDayOfWeek","getDay","getMonthNames","style","dtf","Intl","DateTimeFormat","month","timeZone","_format","Date","getDateNames","day","getDayOfWeekNames","weekday","getYearName","year","getFirstDayOfWeek","getNumDaysInMonth","_createDateWithOverflow","clone","getTime","createDate","result","today","parse","parseFormat","format","displayFormat","addCalendarYears","years","addCalendarMonths","months","newDate","addCalendarDays","days","toIso8601","getUTCFullYear","_2digit","getUTCMonth","getUTCDate","join","test","isNaN","NaN","d","setFullYear","setHours","n","slice","setUTCFullYear","setUTCHours","getHours","getMinutes","getSeconds","getMilliseconds","Platform","ɵprov","MAT_NATIVE_DATE_FORMATS","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","NativeDateModule","provide","useClass","providers","MatNativeDateModule","useValue","ShowOnDirtyErrorStateMatcher","form","dirty","submitted","ErrorStateMatcher","touched","MatLine","ɵdir","selector","host","setLines","lines","element","prefix","changes","pipe","subscribe","setClass","className","isAdd","toggle","MatLineModule","declarations","RippleRef","_renderer","config","_animationForciblyDisabledThroughCss","state","fadeOut","fadeOutRipple","passiveCapturingEventOptions$1","passive","capture","RippleEventManager","_events","Map","_delegateEventHandler","event","target","get","handlers","contains","handler","handleEvent","addHandler","ngZone","handlersForEvent","handlersForElement","set","Set","runOutsideAngular","document","addEventListener","removeHandler","delete","size","removeEventListener","defaultRippleAnimationConfig","enterDuration","exitDuration","ignoreMouseEventsTimeout","passiveCapturingEventOptions","pointerDownEvents","pointerUpEvents","RippleRenderer","_target","_ngZone","elementOrElementRef","_isPointerDown","_activeRipples","_pointerUpEventsRegistered","isBrowser","_containerElement","fadeInRipple","x","y","containerRect","_containerRect","getBoundingClientRect","animationConfig","animation","centered","left","width","top","height","radius","distanceToFurthestCorner","offsetX","offsetY","ripple","backgroundColor","transitionDuration","computedStyles","window","userTransitionProperty","transitionProperty","userTransitionDuration","animationForciblyDisabledThroughCss","rippleRef","transform","persistent","_mostRecentTransientRipple","eventListeners","onTransitionEnd","_finishRippleTransition","onTransitionCancel","_destroyRipple","rippleEl","opacity","fadeOutAll","_getActiveRipples","fadeOutAllNonPersistent","setupTriggerEvents","_triggerElement","_removeTriggerEvents","_eventManager","_onMousedown","_onTouchStart","_onPointerUp","_startFadeOutTransition","isMostRecentTransientRipple","isFakeMousedown","isSyntheticEvent","_lastTouchStartEvent","now","rippleDisabled","clientX","clientY","rippleConfig","touches","changedTouches","isVisible","terminateOnPointerUp","from","keys","trigger","rect","distX","Math","abs","right","distY","bottom","sqrt","MAT_RIPPLE_GLOBAL_OPTIONS","MatRipple","_setupTriggerEventsIfEnabled","_trigger","platform","globalOptions","_animationMode","_globalOptions","_rippleRenderer","ngOnInit","ngOnDestroy","launch","configOrX","ElementRef","NgZone","exportAs","unbounded","MatRippleModule","MatPseudoCheckbox","ɵcmp","encapsulation","None","changeDetection","OnPush","template","styles","MatPseudoCheckboxModule","MAT_OPTION_PARENT_COMPONENT","_MatOptgroupMixinBase","_uniqueOptgroupIdCounter","_MatOptgroupBase","_labelId","_inert","inertGroups","label","MAT_OPTGROUP","MatOptgroup","useExisting","inputs","_uniqueIdCounter","MatOptionSelectionChange","source","isUserInput","_MatOptionBase","multiple","_parent","selected","_selected","group","_element","_changeDetectorRef","_active","_mostRecentViewValue","id","onSelectionChange","_stateChanges","active","viewValue","_text","textContent","trim","select","markForCheck","_emitSelectionChangeEvent","deselect","focus","_origin","options","_getHostElement","setActiveStyles","setInactiveStyles","getLabel","_handleKeydown","keyCode","_selectViaInteraction","preventDefault","_getAriaSelected","_getTabIndex","ngAfterViewChecked","emit","ChangeDetectorRef","static","MatOption","changeDetectorRef","NgIf","_countGroupLabelsBeforeOption","optionIndex","optionGroups","optionsArray","toArray","groups","groupCounter","_getOptionScrollPosition","optionOffset","optionHeight","currentScrollPosition","panelHeight","MatOptionModule"],"sources":["/Users/colinvercruysse/Documents/vercruyssegameboard/vercruyssegameboard/node_modules/@angular/material/fesm2020/core.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Version, InjectionToken, NgModule, Optional, Inject, inject, LOCALE_ID, Injectable, Directive, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, EventEmitter, Output, ViewChild } from '@angular/core';\nimport * as i1 from '@angular/cdk/a11y';\nimport { isFakeMousedownFromScreenReader, isFakeTouchstartFromScreenReader } from '@angular/cdk/a11y';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { VERSION as VERSION$1 } from '@angular/cdk';\nimport * as i3 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i1$1 from '@angular/cdk/platform';\nimport { _isTestEnvironment, normalizePassiveListenerOptions, _getEventTarget } from '@angular/cdk/platform';\nimport { coerceBooleanProperty, coerceNumberProperty, coerceElement } from '@angular/cdk/coercion';\nimport { Observable, Subject } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ENTER, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Current version of Angular Material. */\nconst VERSION = new Version('15.1.0');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nclass AnimationCurves {\n}\nAnimationCurves.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\nAnimationCurves.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\nAnimationCurves.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\nAnimationCurves.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n/** @docs-private */\nclass AnimationDurations {\n}\nAnimationDurations.COMPLEX = '375ms';\nAnimationDurations.ENTERING = '225ms';\nAnimationDurations.EXITING = '195ms';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nfunction MATERIAL_SANITY_CHECKS_FACTORY() {\n    return true;\n}\n/** Injection token that configures whether the Material sanity checks are enabled. */\nconst MATERIAL_SANITY_CHECKS = new InjectionToken('mat-sanity-checks', {\n    providedIn: 'root',\n    factory: MATERIAL_SANITY_CHECKS_FACTORY,\n});\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\nclass MatCommonModule {\n    constructor(highContrastModeDetector, _sanityChecks, _document) {\n        this._sanityChecks = _sanityChecks;\n        this._document = _document;\n        /** Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype). */\n        this._hasDoneGlobalChecks = false;\n        // While A11yModule also does this, we repeat it here to avoid importing A11yModule\n        // in MatCommonModule.\n        highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n        if (!this._hasDoneGlobalChecks) {\n            this._hasDoneGlobalChecks = true;\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                if (this._checkIsEnabled('doctype')) {\n                    _checkDoctypeIsDefined(this._document);\n                }\n                if (this._checkIsEnabled('theme')) {\n                    _checkThemeIsPresent(this._document);\n                }\n                if (this._checkIsEnabled('version')) {\n                    _checkCdkVersionMatch();\n                }\n            }\n        }\n    }\n    /** Gets whether a specific sanity check is enabled. */\n    _checkIsEnabled(name) {\n        if (_isTestEnvironment()) {\n            return false;\n        }\n        if (typeof this._sanityChecks === 'boolean') {\n            return this._sanityChecks;\n        }\n        return !!this._sanityChecks[name];\n    }\n}\nMatCommonModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatCommonModule, deps: [{ token: i1.HighContrastModeDetector }, { token: MATERIAL_SANITY_CHECKS, optional: true }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.NgModule });\nMatCommonModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatCommonModule, imports: [BidiModule], exports: [BidiModule] });\nMatCommonModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatCommonModule, imports: [BidiModule, BidiModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatCommonModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [BidiModule],\n                    exports: [BidiModule],\n                }]\n        }], ctorParameters: function () { return [{ type: i1.HighContrastModeDetector }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MATERIAL_SANITY_CHECKS]\n                }] }, { type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n/** Checks that the page has a doctype. */\nfunction _checkDoctypeIsDefined(doc) {\n    if (!doc.doctype) {\n        console.warn('Current document does not have a doctype. This may cause ' +\n            'some Angular Material components not to behave as expected.');\n    }\n}\n/** Checks that a theme has been included. */\nfunction _checkThemeIsPresent(doc) {\n    // We need to assert that the `body` is defined, because these checks run very early\n    // and the `body` won't be defined if the consumer put their scripts in the `head`.\n    if (!doc.body || typeof getComputedStyle !== 'function') {\n        return;\n    }\n    const testElement = doc.createElement('div');\n    testElement.classList.add('mat-theme-loaded-marker');\n    doc.body.appendChild(testElement);\n    const computedStyle = getComputedStyle(testElement);\n    // In some situations the computed style of the test element can be null. For example in\n    // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n    if (computedStyle && computedStyle.display !== 'none') {\n        console.warn('Could not find Angular Material core theme. Most Material ' +\n            'components may not work as expected. For more info refer ' +\n            'to the theming guide: https://material.angular.io/guide/theming');\n    }\n    testElement.remove();\n}\n/** Checks whether the Material version matches the CDK version. */\nfunction _checkCdkVersionMatch() {\n    if (VERSION.full !== VERSION$1.full) {\n        console.warn('The Angular Material version (' +\n            VERSION.full +\n            ') does not match ' +\n            'the Angular CDK version (' +\n            VERSION$1.full +\n            ').\\n' +\n            'Please ensure the versions of these two packages exactly match.');\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mixinDisabled(base) {\n    return class extends base {\n        get disabled() {\n            return this._disabled;\n        }\n        set disabled(value) {\n            this._disabled = coerceBooleanProperty(value);\n        }\n        constructor(...args) {\n            super(...args);\n            this._disabled = false;\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mixinColor(base, defaultColor) {\n    return class extends base {\n        get color() {\n            return this._color;\n        }\n        set color(value) {\n            const colorPalette = value || this.defaultColor;\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mat-${this._color}`);\n                }\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mat-${colorPalette}`);\n                }\n                this._color = colorPalette;\n            }\n        }\n        constructor(...args) {\n            super(...args);\n            this.defaultColor = defaultColor;\n            // Set the default color that can be specified from the mixin.\n            this.color = defaultColor;\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mixinDisableRipple(base) {\n    return class extends base {\n        /** Whether the ripple effect is disabled or not. */\n        get disableRipple() {\n            return this._disableRipple;\n        }\n        set disableRipple(value) {\n            this._disableRipple = coerceBooleanProperty(value);\n        }\n        constructor(...args) {\n            super(...args);\n            this._disableRipple = false;\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mixinTabIndex(base, defaultTabIndex = 0) {\n    return class extends base {\n        get tabIndex() {\n            return this.disabled ? -1 : this._tabIndex;\n        }\n        set tabIndex(value) {\n            // If the specified tabIndex value is null or undefined, fall back to the default value.\n            this._tabIndex = value != null ? coerceNumberProperty(value) : this.defaultTabIndex;\n        }\n        constructor(...args) {\n            super(...args);\n            this._tabIndex = defaultTabIndex;\n            this.defaultTabIndex = defaultTabIndex;\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mixinErrorState(base) {\n    return class extends base {\n        /** Updates the error state based on the provided error state matcher. */\n        updateErrorState() {\n            const oldState = this.errorState;\n            const parent = this._parentFormGroup || this._parentForm;\n            const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n            const control = this.ngControl ? this.ngControl.control : null;\n            const newState = matcher.isErrorState(control, parent);\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        }\n        constructor(...args) {\n            super(...args);\n            /** Whether the component is in an error state. */\n            this.errorState = false;\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Mixin to augment a directive with an initialized property that will emits when ngOnInit ends. */\nfunction mixinInitialized(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            /** Whether this directive has been marked as initialized. */\n            this._isInitialized = false;\n            /**\n             * List of subscribers that subscribed before the directive was initialized. Should be notified\n             * during _markInitialized. Set to null after pending subscribers are notified, and should\n             * not expect to be populated after.\n             */\n            this._pendingSubscribers = [];\n            /**\n             * Observable stream that emits when the directive initializes. If already initialized, the\n             * subscriber is stored to be notified once _markInitialized is called.\n             */\n            this.initialized = new Observable(subscriber => {\n                // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\n                // when _markInitialized is called.\n                if (this._isInitialized) {\n                    this._notifySubscriber(subscriber);\n                }\n                else {\n                    this._pendingSubscribers.push(subscriber);\n                }\n            });\n        }\n        /**\n         * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n         * of ngOnInit.\n         * @docs-private\n         */\n        _markInitialized() {\n            if (this._isInitialized && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('This directive has already been marked as initialized and ' +\n                    'should not be called twice.');\n            }\n            this._isInitialized = true;\n            this._pendingSubscribers.forEach(this._notifySubscriber);\n            this._pendingSubscribers = null;\n        }\n        /** Emits and completes the subscriber stream (should only emit once). */\n        _notifySubscriber(subscriber) {\n            subscriber.next();\n            subscriber.complete();\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** InjectionToken for datepicker that can be used to override default locale code. */\nconst MAT_DATE_LOCALE = new InjectionToken('MAT_DATE_LOCALE', {\n    providedIn: 'root',\n    factory: MAT_DATE_LOCALE_FACTORY,\n});\n/** @docs-private */\nfunction MAT_DATE_LOCALE_FACTORY() {\n    return inject(LOCALE_ID);\n}\n/** Adapts type `D` to be usable as a date by cdk-based components that work with dates. */\nclass DateAdapter {\n    constructor() {\n        this._localeChanges = new Subject();\n        /** A stream that emits when the locale changes. */\n        this.localeChanges = this._localeChanges;\n    }\n    /**\n     * Given a potential date object, returns that same date object if it is\n     * a valid date, or `null` if it's not a valid date.\n     * @param obj The object to check.\n     * @returns A date or `null`.\n     */\n    getValidDateOrNull(obj) {\n        return this.isDateInstance(obj) && this.isValid(obj) ? obj : null;\n    }\n    /**\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n     * string). The default implementation does not allow any deserialization, it simply checks that\n     * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n     * method on all of its `@Input()` properties that accept dates. It is therefore possible to\n     * support passing values from your backend directly to these properties by overriding this method\n     * to also deserialize the format used by your backend.\n     * @param value The value to be deserialized into a date object.\n     * @returns The deserialized date object, either a valid date, null if the value can be\n     *     deserialized into a null date (e.g. the empty string), or an invalid date.\n     */\n    deserialize(value) {\n        if (value == null || (this.isDateInstance(value) && this.isValid(value))) {\n            return value;\n        }\n        return this.invalid();\n    }\n    /**\n     * Sets the locale used for all dates.\n     * @param locale The new locale.\n     */\n    setLocale(locale) {\n        this.locale = locale;\n        this._localeChanges.next();\n    }\n    /**\n     * Compares two dates.\n     * @param first The first date to compare.\n     * @param second The second date to compare.\n     * @returns 0 if the dates are equal, a number less than 0 if the first date is earlier,\n     *     a number greater than 0 if the first date is later.\n     */\n    compareDate(first, second) {\n        return (this.getYear(first) - this.getYear(second) ||\n            this.getMonth(first) - this.getMonth(second) ||\n            this.getDate(first) - this.getDate(second));\n    }\n    /**\n     * Checks if two dates are equal.\n     * @param first The first date to check.\n     * @param second The second date to check.\n     * @returns Whether the two dates are equal.\n     *     Null dates are considered equal to other null dates.\n     */\n    sameDate(first, second) {\n        if (first && second) {\n            let firstValid = this.isValid(first);\n            let secondValid = this.isValid(second);\n            if (firstValid && secondValid) {\n                return !this.compareDate(first, second);\n            }\n            return firstValid == secondValid;\n        }\n        return first == second;\n    }\n    /**\n     * Clamp the given date between min and max dates.\n     * @param date The date to clamp.\n     * @param min The minimum value to allow. If null or omitted no min is enforced.\n     * @param max The maximum value to allow. If null or omitted no max is enforced.\n     * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\n     *     otherwise `date`.\n     */\n    clampDate(date, min, max) {\n        if (min && this.compareDate(date, min) < 0) {\n            return min;\n        }\n        if (max && this.compareDate(date, max) > 0) {\n            return max;\n        }\n        return date;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_DATE_FORMATS = new InjectionToken('mat-date-formats');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n */\nconst ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n/** Creates an array and fills it with values. */\nfunction range(length, valueFunction) {\n    const valuesArray = Array(length);\n    for (let i = 0; i < length; i++) {\n        valuesArray[i] = valueFunction(i);\n    }\n    return valuesArray;\n}\n/** Adapts the native JS Date for use with cdk-based components that work with dates. */\nclass NativeDateAdapter extends DateAdapter {\n    constructor(matDateLocale, \n    /**\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 14.0.0\n     */\n    _platform) {\n        super();\n        /**\n         * @deprecated No longer being used. To be removed.\n         * @breaking-change 14.0.0\n         */\n        this.useUtcForDisplay = false;\n        super.setLocale(matDateLocale);\n    }\n    getYear(date) {\n        return date.getFullYear();\n    }\n    getMonth(date) {\n        return date.getMonth();\n    }\n    getDate(date) {\n        return date.getDate();\n    }\n    getDayOfWeek(date) {\n        return date.getDay();\n    }\n    getMonthNames(style) {\n        const dtf = new Intl.DateTimeFormat(this.locale, { month: style, timeZone: 'utc' });\n        return range(12, i => this._format(dtf, new Date(2017, i, 1)));\n    }\n    getDateNames() {\n        const dtf = new Intl.DateTimeFormat(this.locale, { day: 'numeric', timeZone: 'utc' });\n        return range(31, i => this._format(dtf, new Date(2017, 0, i + 1)));\n    }\n    getDayOfWeekNames(style) {\n        const dtf = new Intl.DateTimeFormat(this.locale, { weekday: style, timeZone: 'utc' });\n        return range(7, i => this._format(dtf, new Date(2017, 0, i + 1)));\n    }\n    getYearName(date) {\n        const dtf = new Intl.DateTimeFormat(this.locale, { year: 'numeric', timeZone: 'utc' });\n        return this._format(dtf, date);\n    }\n    getFirstDayOfWeek() {\n        // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n        return 0;\n    }\n    getNumDaysInMonth(date) {\n        return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\n    }\n    clone(date) {\n        return new Date(date.getTime());\n    }\n    createDate(year, month, date) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            // Check for invalid month and date (except upper bound on date which we have to check after\n            // creating the Date).\n            if (month < 0 || month > 11) {\n                throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n            }\n            if (date < 1) {\n                throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n            }\n        }\n        let result = this._createDateWithOverflow(year, month, date);\n        // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n        if (result.getMonth() != month && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n        }\n        return result;\n    }\n    today() {\n        return new Date();\n    }\n    parse(value, parseFormat) {\n        // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n        // parameters.\n        if (typeof value == 'number') {\n            return new Date(value);\n        }\n        return value ? new Date(Date.parse(value)) : null;\n    }\n    format(date, displayFormat) {\n        if (!this.isValid(date)) {\n            throw Error('NativeDateAdapter: Cannot format invalid date.');\n        }\n        const dtf = new Intl.DateTimeFormat(this.locale, { ...displayFormat, timeZone: 'utc' });\n        return this._format(dtf, date);\n    }\n    addCalendarYears(date, years) {\n        return this.addCalendarMonths(date, years * 12);\n    }\n    addCalendarMonths(date, months) {\n        let newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n        // It's possible to wind up in the wrong month if the original month has more days than the new\n        // month. In this case we want to go to the last day of the desired month.\n        // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n        // guarantee this.\n        if (this.getMonth(newDate) != (((this.getMonth(date) + months) % 12) + 12) % 12) {\n            newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n        }\n        return newDate;\n    }\n    addCalendarDays(date, days) {\n        return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n    }\n    toIso8601(date) {\n        return [\n            date.getUTCFullYear(),\n            this._2digit(date.getUTCMonth() + 1),\n            this._2digit(date.getUTCDate()),\n        ].join('-');\n    }\n    /**\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n     * invalid date for all other values.\n     */\n    deserialize(value) {\n        if (typeof value === 'string') {\n            if (!value) {\n                return null;\n            }\n            // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n            // string is the right format first.\n            if (ISO_8601_REGEX.test(value)) {\n                let date = new Date(value);\n                if (this.isValid(date)) {\n                    return date;\n                }\n            }\n        }\n        return super.deserialize(value);\n    }\n    isDateInstance(obj) {\n        return obj instanceof Date;\n    }\n    isValid(date) {\n        return !isNaN(date.getTime());\n    }\n    invalid() {\n        return new Date(NaN);\n    }\n    /** Creates a date but allows the month and date to overflow. */\n    _createDateWithOverflow(year, month, date) {\n        // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n        // To work around this we use `setFullYear` and `setHours` instead.\n        const d = new Date();\n        d.setFullYear(year, month, date);\n        d.setHours(0, 0, 0, 0);\n        return d;\n    }\n    /**\n     * Pads a number to make it two digits.\n     * @param n The number to pad.\n     * @returns The padded number.\n     */\n    _2digit(n) {\n        return ('00' + n).slice(-2);\n    }\n    /**\n     * When converting Date object to string, javascript built-in functions may return wrong\n     * results because it applies its internal DST rules. The DST rules around the world change\n     * very frequently, and the current valid rule is not always valid in previous years though.\n     * We work around this problem building a new Date object which has its internal UTC\n     * representation with the local date and time.\n     * @param dtf Intl.DateTimeFormat object, containing the desired string format. It must have\n     *    timeZone set to 'utc' to work fine.\n     * @param date Date from which we want to get the string representation according to dtf\n     * @returns A Date object with its UTC representation based on the passed in date info\n     */\n    _format(dtf, date) {\n        // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n        // To work around this we use `setUTCFullYear` and `setUTCHours` instead.\n        const d = new Date();\n        d.setUTCFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n        d.setUTCHours(date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());\n        return dtf.format(d);\n    }\n}\nNativeDateAdapter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: NativeDateAdapter, deps: [{ token: MAT_DATE_LOCALE, optional: true }, { token: i1$1.Platform }], target: i0.ɵɵFactoryTarget.Injectable });\nNativeDateAdapter.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: NativeDateAdapter });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: NativeDateAdapter, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_DATE_LOCALE]\n                }] }, { type: i1$1.Platform }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_NATIVE_DATE_FORMATS = {\n    parse: {\n        dateInput: null,\n    },\n    display: {\n        dateInput: { year: 'numeric', month: 'numeric', day: 'numeric' },\n        monthYearLabel: { year: 'numeric', month: 'short' },\n        dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n        monthYearA11yLabel: { year: 'numeric', month: 'long' },\n    },\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass NativeDateModule {\n}\nNativeDateModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: NativeDateModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNativeDateModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: NativeDateModule });\nNativeDateModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: NativeDateModule, providers: [{ provide: DateAdapter, useClass: NativeDateAdapter }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: NativeDateModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [{ provide: DateAdapter, useClass: NativeDateAdapter }],\n                }]\n        }] });\nclass MatNativeDateModule {\n}\nMatNativeDateModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatNativeDateModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatNativeDateModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatNativeDateModule, imports: [NativeDateModule] });\nMatNativeDateModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatNativeDateModule, providers: [{ provide: MAT_DATE_FORMATS, useValue: MAT_NATIVE_DATE_FORMATS }], imports: [NativeDateModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatNativeDateModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [NativeDateModule],\n                    providers: [{ provide: MAT_DATE_FORMATS, useValue: MAT_NATIVE_DATE_FORMATS }],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Error state matcher that matches when a control is invalid and dirty. */\nclass ShowOnDirtyErrorStateMatcher {\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n}\nShowOnDirtyErrorStateMatcher.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: ShowOnDirtyErrorStateMatcher, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nShowOnDirtyErrorStateMatcher.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: ShowOnDirtyErrorStateMatcher });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: ShowOnDirtyErrorStateMatcher, decorators: [{\n            type: Injectable\n        }] });\n/** Provider that defines how form controls behave with regards to displaying error messages. */\nclass ErrorStateMatcher {\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\nErrorStateMatcher.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: ErrorStateMatcher, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nErrorStateMatcher.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: ErrorStateMatcher, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: ErrorStateMatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\nclass MatLine {\n}\nMatLine.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatLine, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatLine.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.1.0-rc.0\", type: MatLine, selector: \"[mat-line], [matLine]\", host: { classAttribute: \"mat-line\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatLine, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-line], [matLine]',\n                    host: { 'class': 'mat-line' },\n                }]\n        }] });\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nfunction setLines(lines, element, prefix = 'mat') {\n    // Note: doesn't need to unsubscribe, because `changes`\n    // gets completed by Angular when the view is destroyed.\n    lines.changes.pipe(startWith(lines)).subscribe(({ length }) => {\n        setClass(element, `${prefix}-2-line`, false);\n        setClass(element, `${prefix}-3-line`, false);\n        setClass(element, `${prefix}-multi-line`, false);\n        if (length === 2 || length === 3) {\n            setClass(element, `${prefix}-${length}-line`, true);\n        }\n        else if (length > 3) {\n            setClass(element, `${prefix}-multi-line`, true);\n        }\n    });\n}\n/** Adds or removes a class from an element. */\nfunction setClass(element, className, isAdd) {\n    element.nativeElement.classList.toggle(className, isAdd);\n}\nclass MatLineModule {\n}\nMatLineModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatLineModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatLineModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatLineModule, declarations: [MatLine], imports: [MatCommonModule], exports: [MatLine, MatCommonModule] });\nMatLineModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatLineModule, imports: [MatCommonModule, MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatLineModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatLine, MatCommonModule],\n                    declarations: [MatLine],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Reference to a previously launched ripple element.\n */\nclass RippleRef {\n    constructor(_renderer, \n    /** Reference to the ripple HTML element. */\n    element, \n    /** Ripple configuration used for the ripple. */\n    config, \n    /* Whether animations are forcibly disabled for ripples through CSS. */\n    _animationForciblyDisabledThroughCss = false) {\n        this._renderer = _renderer;\n        this.element = element;\n        this.config = config;\n        this._animationForciblyDisabledThroughCss = _animationForciblyDisabledThroughCss;\n        /** Current state of the ripple. */\n        this.state = 3 /* RippleState.HIDDEN */;\n    }\n    /** Fades out the ripple element. */\n    fadeOut() {\n        this._renderer.fadeOutRipple(this);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Options used to bind a passive capturing event. */\nconst passiveCapturingEventOptions$1 = normalizePassiveListenerOptions({\n    passive: true,\n    capture: true,\n});\n/** Manages events through delegation so that as few event handlers as possible are bound. */\nclass RippleEventManager {\n    constructor() {\n        this._events = new Map();\n        /** Event handler that is bound and which dispatches the events to the different targets. */\n        this._delegateEventHandler = (event) => {\n            const target = _getEventTarget(event);\n            if (target) {\n                this._events.get(event.type)?.forEach((handlers, element) => {\n                    if (element === target || element.contains(target)) {\n                        handlers.forEach(handler => handler.handleEvent(event));\n                    }\n                });\n            }\n        };\n    }\n    /** Adds an event handler. */\n    addHandler(ngZone, name, element, handler) {\n        const handlersForEvent = this._events.get(name);\n        if (handlersForEvent) {\n            const handlersForElement = handlersForEvent.get(element);\n            if (handlersForElement) {\n                handlersForElement.add(handler);\n            }\n            else {\n                handlersForEvent.set(element, new Set([handler]));\n            }\n        }\n        else {\n            this._events.set(name, new Map([[element, new Set([handler])]]));\n            ngZone.runOutsideAngular(() => {\n                document.addEventListener(name, this._delegateEventHandler, passiveCapturingEventOptions$1);\n            });\n        }\n    }\n    /** Removes an event handler. */\n    removeHandler(name, element, handler) {\n        const handlersForEvent = this._events.get(name);\n        if (!handlersForEvent) {\n            return;\n        }\n        const handlersForElement = handlersForEvent.get(element);\n        if (!handlersForElement) {\n            return;\n        }\n        handlersForElement.delete(handler);\n        if (handlersForElement.size === 0) {\n            handlersForEvent.delete(element);\n        }\n        if (handlersForEvent.size === 0) {\n            this._events.delete(name);\n            document.removeEventListener(name, this._delegateEventHandler, passiveCapturingEventOptions$1);\n        }\n    }\n}\n\n/**\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n */\nconst defaultRippleAnimationConfig = {\n    enterDuration: 225,\n    exitDuration: 150,\n};\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n */\nconst ignoreMouseEventsTimeout = 800;\n/** Options used to bind a passive capturing event. */\nconst passiveCapturingEventOptions = normalizePassiveListenerOptions({\n    passive: true,\n    capture: true,\n});\n/** Events that signal that the pointer is down. */\nconst pointerDownEvents = ['mousedown', 'touchstart'];\n/** Events that signal that the pointer is up. */\nconst pointerUpEvents = ['mouseup', 'mouseleave', 'touchend', 'touchcancel'];\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * @docs-private\n */\nclass RippleRenderer {\n    constructor(_target, _ngZone, elementOrElementRef, _platform) {\n        this._target = _target;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        /** Whether the pointer is currently down or not. */\n        this._isPointerDown = false;\n        /**\n         * Map of currently active ripple references.\n         * The ripple reference is mapped to its element event listeners.\n         * The reason why `| null` is used is that event listeners are added only\n         * when the condition is truthy (see the `_startFadeOutTransition` method).\n         */\n        this._activeRipples = new Map();\n        /** Whether pointer-up event listeners have been registered. */\n        this._pointerUpEventsRegistered = false;\n        // Only do anything if we're on the browser.\n        if (_platform.isBrowser) {\n            this._containerElement = coerceElement(elementOrElementRef);\n        }\n    }\n    /**\n     * Fades in a ripple at the given coordinates.\n     * @param x Coordinate within the element, along the X axis at which to start the ripple.\n     * @param y Coordinate within the element, along the Y axis at which to start the ripple.\n     * @param config Extra ripple options.\n     */\n    fadeInRipple(x, y, config = {}) {\n        const containerRect = (this._containerRect =\n            this._containerRect || this._containerElement.getBoundingClientRect());\n        const animationConfig = { ...defaultRippleAnimationConfig, ...config.animation };\n        if (config.centered) {\n            x = containerRect.left + containerRect.width / 2;\n            y = containerRect.top + containerRect.height / 2;\n        }\n        const radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n        const offsetX = x - containerRect.left;\n        const offsetY = y - containerRect.top;\n        const enterDuration = animationConfig.enterDuration;\n        const ripple = document.createElement('div');\n        ripple.classList.add('mat-ripple-element');\n        ripple.style.left = `${offsetX - radius}px`;\n        ripple.style.top = `${offsetY - radius}px`;\n        ripple.style.height = `${radius * 2}px`;\n        ripple.style.width = `${radius * 2}px`;\n        // If a custom color has been specified, set it as inline style. If no color is\n        // set, the default color will be applied through the ripple theme styles.\n        if (config.color != null) {\n            ripple.style.backgroundColor = config.color;\n        }\n        ripple.style.transitionDuration = `${enterDuration}ms`;\n        this._containerElement.appendChild(ripple);\n        // By default the browser does not recalculate the styles of dynamically created\n        // ripple elements. This is critical to ensure that the `scale` animates properly.\n        // We enforce a style recalculation by calling `getComputedStyle` and *accessing* a property.\n        // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n        const computedStyles = window.getComputedStyle(ripple);\n        const userTransitionProperty = computedStyles.transitionProperty;\n        const userTransitionDuration = computedStyles.transitionDuration;\n        // Note: We detect whether animation is forcibly disabled through CSS (e.g. through\n        // `transition: none` or `display: none`). This is technically unexpected since animations are\n        // controlled through the animation config, but this exists for backwards compatibility. This\n        // logic does not need to be super accurate since it covers some edge cases which can be easily\n        // avoided by users.\n        const animationForciblyDisabledThroughCss = userTransitionProperty === 'none' ||\n            // Note: The canonical unit for serialized CSS `<time>` properties is seconds. Additionally\n            // some browsers expand the duration for every property (in our case `opacity` and `transform`).\n            userTransitionDuration === '0s' ||\n            userTransitionDuration === '0s, 0s' ||\n            // If the container is 0x0, it's likely `display: none`.\n            (containerRect.width === 0 && containerRect.height === 0);\n        // Exposed reference to the ripple that will be returned.\n        const rippleRef = new RippleRef(this, ripple, config, animationForciblyDisabledThroughCss);\n        // Start the enter animation by setting the transform/scale to 100%. The animation will\n        // execute as part of this statement because we forced a style recalculation before.\n        // Note: We use a 3d transform here in order to avoid an issue in Safari where\n        // the ripples aren't clipped when inside the shadow DOM (see #24028).\n        ripple.style.transform = 'scale3d(1, 1, 1)';\n        rippleRef.state = 0 /* RippleState.FADING_IN */;\n        if (!config.persistent) {\n            this._mostRecentTransientRipple = rippleRef;\n        }\n        let eventListeners = null;\n        // Do not register the `transition` event listener if fade-in and fade-out duration\n        // are set to zero. The events won't fire anyway and we can save resources here.\n        if (!animationForciblyDisabledThroughCss && (enterDuration || animationConfig.exitDuration)) {\n            this._ngZone.runOutsideAngular(() => {\n                const onTransitionEnd = () => this._finishRippleTransition(rippleRef);\n                const onTransitionCancel = () => this._destroyRipple(rippleRef);\n                ripple.addEventListener('transitionend', onTransitionEnd);\n                // If the transition is cancelled (e.g. due to DOM removal), we destroy the ripple\n                // directly as otherwise we would keep it part of the ripple container forever.\n                // https://www.w3.org/TR/css-transitions-1/#:~:text=no%20longer%20in%20the%20document.\n                ripple.addEventListener('transitioncancel', onTransitionCancel);\n                eventListeners = { onTransitionEnd, onTransitionCancel };\n            });\n        }\n        // Add the ripple reference to the list of all active ripples.\n        this._activeRipples.set(rippleRef, eventListeners);\n        // In case there is no fade-in transition duration, we need to manually call the transition\n        // end listener because `transitionend` doesn't fire if there is no transition.\n        if (animationForciblyDisabledThroughCss || !enterDuration) {\n            this._finishRippleTransition(rippleRef);\n        }\n        return rippleRef;\n    }\n    /** Fades out a ripple reference. */\n    fadeOutRipple(rippleRef) {\n        // For ripples already fading out or hidden, this should be a noop.\n        if (rippleRef.state === 2 /* RippleState.FADING_OUT */ || rippleRef.state === 3 /* RippleState.HIDDEN */) {\n            return;\n        }\n        const rippleEl = rippleRef.element;\n        const animationConfig = { ...defaultRippleAnimationConfig, ...rippleRef.config.animation };\n        // This starts the fade-out transition and will fire the transition end listener that\n        // removes the ripple element from the DOM.\n        rippleEl.style.transitionDuration = `${animationConfig.exitDuration}ms`;\n        rippleEl.style.opacity = '0';\n        rippleRef.state = 2 /* RippleState.FADING_OUT */;\n        // In case there is no fade-out transition duration, we need to manually call the\n        // transition end listener because `transitionend` doesn't fire if there is no transition.\n        if (rippleRef._animationForciblyDisabledThroughCss || !animationConfig.exitDuration) {\n            this._finishRippleTransition(rippleRef);\n        }\n    }\n    /** Fades out all currently active ripples. */\n    fadeOutAll() {\n        this._getActiveRipples().forEach(ripple => ripple.fadeOut());\n    }\n    /** Fades out all currently active non-persistent ripples. */\n    fadeOutAllNonPersistent() {\n        this._getActiveRipples().forEach(ripple => {\n            if (!ripple.config.persistent) {\n                ripple.fadeOut();\n            }\n        });\n    }\n    /** Sets up the trigger event listeners */\n    setupTriggerEvents(elementOrElementRef) {\n        const element = coerceElement(elementOrElementRef);\n        if (!this._platform.isBrowser || !element || element === this._triggerElement) {\n            return;\n        }\n        // Remove all previously registered event listeners from the trigger element.\n        this._removeTriggerEvents();\n        this._triggerElement = element;\n        // Use event delegation for the trigger events since they're\n        // set up during creation and are performance-sensitive.\n        pointerDownEvents.forEach(type => {\n            RippleRenderer._eventManager.addHandler(this._ngZone, type, element, this);\n        });\n    }\n    /**\n     * Handles all registered events.\n     * @docs-private\n     */\n    handleEvent(event) {\n        if (event.type === 'mousedown') {\n            this._onMousedown(event);\n        }\n        else if (event.type === 'touchstart') {\n            this._onTouchStart(event);\n        }\n        else {\n            this._onPointerUp();\n        }\n        // If pointer-up events haven't been registered yet, do so now.\n        // We do this on-demand in order to reduce the total number of event listeners\n        // registered by the ripples, which speeds up the rendering time for large UIs.\n        if (!this._pointerUpEventsRegistered) {\n            // The events for hiding the ripple are bound directly on the trigger, because:\n            // 1. Some of them occur frequently (e.g. `mouseleave`) and any advantage we get from\n            // delegation will be diminished by having to look through all the data structures often.\n            // 2. They aren't as performance-sensitive, because they're bound only after the user\n            // has interacted with an element.\n            this._ngZone.runOutsideAngular(() => {\n                pointerUpEvents.forEach(type => {\n                    this._triggerElement.addEventListener(type, this, passiveCapturingEventOptions);\n                });\n            });\n            this._pointerUpEventsRegistered = true;\n        }\n    }\n    /** Method that will be called if the fade-in or fade-in transition completed. */\n    _finishRippleTransition(rippleRef) {\n        if (rippleRef.state === 0 /* RippleState.FADING_IN */) {\n            this._startFadeOutTransition(rippleRef);\n        }\n        else if (rippleRef.state === 2 /* RippleState.FADING_OUT */) {\n            this._destroyRipple(rippleRef);\n        }\n    }\n    /**\n     * Starts the fade-out transition of the given ripple if it's not persistent and the pointer\n     * is not held down anymore.\n     */\n    _startFadeOutTransition(rippleRef) {\n        const isMostRecentTransientRipple = rippleRef === this._mostRecentTransientRipple;\n        const { persistent } = rippleRef.config;\n        rippleRef.state = 1 /* RippleState.VISIBLE */;\n        // When the timer runs out while the user has kept their pointer down, we want to\n        // keep only the persistent ripples and the latest transient ripple. We do this,\n        // because we don't want stacked transient ripples to appear after their enter\n        // animation has finished.\n        if (!persistent && (!isMostRecentTransientRipple || !this._isPointerDown)) {\n            rippleRef.fadeOut();\n        }\n    }\n    /** Destroys the given ripple by removing it from the DOM and updating its state. */\n    _destroyRipple(rippleRef) {\n        const eventListeners = this._activeRipples.get(rippleRef) ?? null;\n        this._activeRipples.delete(rippleRef);\n        // Clear out the cached bounding rect if we have no more ripples.\n        if (!this._activeRipples.size) {\n            this._containerRect = null;\n        }\n        // If the current ref is the most recent transient ripple, unset it\n        // avoid memory leaks.\n        if (rippleRef === this._mostRecentTransientRipple) {\n            this._mostRecentTransientRipple = null;\n        }\n        rippleRef.state = 3 /* RippleState.HIDDEN */;\n        if (eventListeners !== null) {\n            rippleRef.element.removeEventListener('transitionend', eventListeners.onTransitionEnd);\n            rippleRef.element.removeEventListener('transitioncancel', eventListeners.onTransitionCancel);\n        }\n        rippleRef.element.remove();\n    }\n    /** Function being called whenever the trigger is being pressed using mouse. */\n    _onMousedown(event) {\n        // Screen readers will fire fake mouse events for space/enter. Skip launching a\n        // ripple in this case for consistency with the non-screen-reader experience.\n        const isFakeMousedown = isFakeMousedownFromScreenReader(event);\n        const isSyntheticEvent = this._lastTouchStartEvent &&\n            Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n        if (!this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\n            this._isPointerDown = true;\n            this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\n        }\n    }\n    /** Function being called whenever the trigger is being pressed using touch. */\n    _onTouchStart(event) {\n        if (!this._target.rippleDisabled && !isFakeTouchstartFromScreenReader(event)) {\n            // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n            // events will launch a second ripple if we don't ignore mouse events for a specific\n            // time after a touchstart event.\n            this._lastTouchStartEvent = Date.now();\n            this._isPointerDown = true;\n            // Use `changedTouches` so we skip any touches where the user put\n            // their finger down, but used another finger to tap the element again.\n            const touches = event.changedTouches;\n            for (let i = 0; i < touches.length; i++) {\n                this.fadeInRipple(touches[i].clientX, touches[i].clientY, this._target.rippleConfig);\n            }\n        }\n    }\n    /** Function being called whenever the trigger is being released. */\n    _onPointerUp() {\n        if (!this._isPointerDown) {\n            return;\n        }\n        this._isPointerDown = false;\n        // Fade-out all ripples that are visible and not persistent.\n        this._getActiveRipples().forEach(ripple => {\n            // By default, only ripples that are completely visible will fade out on pointer release.\n            // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n            const isVisible = ripple.state === 1 /* RippleState.VISIBLE */ ||\n                (ripple.config.terminateOnPointerUp && ripple.state === 0 /* RippleState.FADING_IN */);\n            if (!ripple.config.persistent && isVisible) {\n                ripple.fadeOut();\n            }\n        });\n    }\n    _getActiveRipples() {\n        return Array.from(this._activeRipples.keys());\n    }\n    /** Removes previously registered event listeners from the trigger element. */\n    _removeTriggerEvents() {\n        const trigger = this._triggerElement;\n        if (trigger) {\n            pointerDownEvents.forEach(type => RippleRenderer._eventManager.removeHandler(type, trigger, this));\n            if (this._pointerUpEventsRegistered) {\n                pointerUpEvents.forEach(type => trigger.removeEventListener(type, this, passiveCapturingEventOptions));\n            }\n        }\n    }\n}\nRippleRenderer._eventManager = new RippleEventManager();\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n */\nfunction distanceToFurthestCorner(x, y, rect) {\n    const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n    const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n    return Math.sqrt(distX * distX + distY * distY);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to specify the global ripple options. */\nconst MAT_RIPPLE_GLOBAL_OPTIONS = new InjectionToken('mat-ripple-global-options');\nclass MatRipple {\n    /**\n     * Whether click events will not trigger the ripple. Ripples can be still launched manually\n     * by using the `launch()` method.\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        if (value) {\n            this.fadeOutAllNonPersistent();\n        }\n        this._disabled = value;\n        this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * The element that triggers the ripple when click events are received.\n     * Defaults to the directive's host element.\n     */\n    get trigger() {\n        return this._trigger || this._elementRef.nativeElement;\n    }\n    set trigger(trigger) {\n        this._trigger = trigger;\n        this._setupTriggerEventsIfEnabled();\n    }\n    constructor(_elementRef, ngZone, platform, globalOptions, _animationMode) {\n        this._elementRef = _elementRef;\n        this._animationMode = _animationMode;\n        /**\n         * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n         * will be the distance from the center of the ripple to the furthest corner of the host element's\n         * bounding rectangle.\n         */\n        this.radius = 0;\n        this._disabled = false;\n        /** Whether ripple directive is initialized and the input bindings are set. */\n        this._isInitialized = false;\n        this._globalOptions = globalOptions || {};\n        this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\n    }\n    ngOnInit() {\n        this._isInitialized = true;\n        this._setupTriggerEventsIfEnabled();\n    }\n    ngOnDestroy() {\n        this._rippleRenderer._removeTriggerEvents();\n    }\n    /** Fades out all currently showing ripple elements. */\n    fadeOutAll() {\n        this._rippleRenderer.fadeOutAll();\n    }\n    /** Fades out all currently showing non-persistent ripple elements. */\n    fadeOutAllNonPersistent() {\n        this._rippleRenderer.fadeOutAllNonPersistent();\n    }\n    /**\n     * Ripple configuration from the directive's input values.\n     * @docs-private Implemented as part of RippleTarget\n     */\n    get rippleConfig() {\n        return {\n            centered: this.centered,\n            radius: this.radius,\n            color: this.color,\n            animation: {\n                ...this._globalOptions.animation,\n                ...(this._animationMode === 'NoopAnimations' ? { enterDuration: 0, exitDuration: 0 } : {}),\n                ...this.animation,\n            },\n            terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,\n        };\n    }\n    /**\n     * Whether ripples on pointer-down are disabled or not.\n     * @docs-private Implemented as part of RippleTarget\n     */\n    get rippleDisabled() {\n        return this.disabled || !!this._globalOptions.disabled;\n    }\n    /** Sets up the trigger event listeners if ripples are enabled. */\n    _setupTriggerEventsIfEnabled() {\n        if (!this.disabled && this._isInitialized) {\n            this._rippleRenderer.setupTriggerEvents(this.trigger);\n        }\n    }\n    /** Launches a manual ripple at the specified coordinated or just by the ripple config. */\n    launch(configOrX, y = 0, config) {\n        if (typeof configOrX === 'number') {\n            return this._rippleRenderer.fadeInRipple(configOrX, y, { ...this.rippleConfig, ...config });\n        }\n        else {\n            return this._rippleRenderer.fadeInRipple(0, 0, { ...this.rippleConfig, ...configOrX });\n        }\n    }\n}\nMatRipple.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatRipple, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: i1$1.Platform }, { token: MAT_RIPPLE_GLOBAL_OPTIONS, optional: true }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatRipple.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.1.0-rc.0\", type: MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: { color: [\"matRippleColor\", \"color\"], unbounded: [\"matRippleUnbounded\", \"unbounded\"], centered: [\"matRippleCentered\", \"centered\"], radius: [\"matRippleRadius\", \"radius\"], animation: [\"matRippleAnimation\", \"animation\"], disabled: [\"matRippleDisabled\", \"disabled\"], trigger: [\"matRippleTrigger\", \"trigger\"] }, host: { properties: { \"class.mat-ripple-unbounded\": \"unbounded\" }, classAttribute: \"mat-ripple\" }, exportAs: [\"matRipple\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatRipple, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-ripple], [matRipple]',\n                    exportAs: 'matRipple',\n                    host: {\n                        'class': 'mat-ripple',\n                        '[class.mat-ripple-unbounded]': 'unbounded',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: i1$1.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { color: [{\n                type: Input,\n                args: ['matRippleColor']\n            }], unbounded: [{\n                type: Input,\n                args: ['matRippleUnbounded']\n            }], centered: [{\n                type: Input,\n                args: ['matRippleCentered']\n            }], radius: [{\n                type: Input,\n                args: ['matRippleRadius']\n            }], animation: [{\n                type: Input,\n                args: ['matRippleAnimation']\n            }], disabled: [{\n                type: Input,\n                args: ['matRippleDisabled']\n            }], trigger: [{\n                type: Input,\n                args: ['matRippleTrigger']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatRippleModule {\n}\nMatRippleModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatRippleModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatRippleModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatRippleModule, declarations: [MatRipple], imports: [MatCommonModule], exports: [MatRipple, MatCommonModule] });\nMatRippleModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatRippleModule, imports: [MatCommonModule, MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatRippleModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatRipple, MatCommonModule],\n                    declarations: [MatRipple],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\nclass MatPseudoCheckbox {\n    constructor(_animationMode) {\n        this._animationMode = _animationMode;\n        /** Display state of the checkbox. */\n        this.state = 'unchecked';\n        /** Whether the checkbox is disabled. */\n        this.disabled = false;\n    }\n}\nMatPseudoCheckbox.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatPseudoCheckbox, deps: [{ token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatPseudoCheckbox.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.0-rc.0\", type: MatPseudoCheckbox, selector: \"mat-pseudo-checkbox\", inputs: { state: \"state\", disabled: \"disabled\" }, host: { properties: { \"class.mat-pseudo-checkbox-indeterminate\": \"state === \\\"indeterminate\\\"\", \"class.mat-pseudo-checkbox-checked\": \"state === \\\"checked\\\"\", \"class.mat-pseudo-checkbox-disabled\": \"disabled\", \"class._mat-animation-noopable\": \"_animationMode === \\\"NoopAnimations\\\"\" }, classAttribute: \"mat-pseudo-checkbox\" }, ngImport: i0, template: '', isInline: true, styles: [\".mat-pseudo-checkbox{border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:rgba(0,0,0,0)}.mat-pseudo-checkbox._mat-animation-noopable{transition:none !important;animation:none !important}.mat-pseudo-checkbox._mat-animation-noopable::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{left:1px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{left:1px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}.mat-pseudo-checkbox{width:18px;height:18px}.mat-pseudo-checkbox-indeterminate::after{top:6px;width:12px}.mat-pseudo-checkbox-checked::after{top:2.7px;width:10px;height:4px}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatPseudoCheckbox, decorators: [{\n            type: Component,\n            args: [{ encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, selector: 'mat-pseudo-checkbox', template: '', host: {\n                        'class': 'mat-pseudo-checkbox',\n                        '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n                        '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n                        '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n                        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    }, styles: [\".mat-pseudo-checkbox{border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:rgba(0,0,0,0)}.mat-pseudo-checkbox._mat-animation-noopable{transition:none !important;animation:none !important}.mat-pseudo-checkbox._mat-animation-noopable::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{left:1px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{left:1px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}.mat-pseudo-checkbox{width:18px;height:18px}.mat-pseudo-checkbox-indeterminate::after{top:6px;width:12px}.mat-pseudo-checkbox-checked::after{top:2.7px;width:10px;height:4px}\"] }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { state: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatPseudoCheckboxModule {\n}\nMatPseudoCheckboxModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatPseudoCheckboxModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatPseudoCheckboxModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatPseudoCheckboxModule, declarations: [MatPseudoCheckbox], imports: [MatCommonModule], exports: [MatPseudoCheckbox] });\nMatPseudoCheckboxModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatPseudoCheckboxModule, imports: [MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatPseudoCheckboxModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatPseudoCheckbox],\n                    declarations: [MatPseudoCheckbox],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token used to provide the parent component to options.\n */\nconst MAT_OPTION_PARENT_COMPONENT = new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Notes on the accessibility pattern used for `mat-optgroup`.\n// The option group has two different \"modes\": regular and inert. The regular mode uses the\n// recommended a11y pattern which has `role=\"group\"` on the group element with `aria-labelledby`\n// pointing to the label. This works for `mat-select`, but it seems to hit a bug for autocomplete\n// under VoiceOver where the group doesn't get read out at all. The bug appears to be that if\n// there's __any__ a11y-related attribute on the group (e.g. `role` or `aria-labelledby`),\n// VoiceOver on Safari won't read it out.\n// We've introduced the `inert` mode as a workaround. Under this mode, all a11y attributes are\n// removed from the group, and we get the screen reader to read out the group label by mirroring it\n// inside an invisible element in the option. This is sub-optimal, because the screen reader will\n// repeat the group label on each navigation, whereas the default pattern only reads the group when\n// the user enters a new group. The following alternate approaches were considered:\n// 1. Reading out the group label using the `LiveAnnouncer` solves the problem, but we can't control\n//    when the text will be read out so sometimes it comes in too late or never if the user\n//    navigates quickly.\n// 2. `<mat-option aria-describedby=\"groupLabel\"` - This works on Safari, but VoiceOver in Chrome\n//    won't read out the description at all.\n// 3. `<mat-option aria-labelledby=\"optionLabel groupLabel\"` - This works on Chrome, but Safari\n//     doesn't read out the text at all. Furthermore, on\n// Boilerplate for applying mixins to MatOptgroup.\n/** @docs-private */\nconst _MatOptgroupMixinBase = mixinDisabled(class {\n});\n// Counter for unique group ids.\nlet _uniqueOptgroupIdCounter = 0;\nclass _MatOptgroupBase extends _MatOptgroupMixinBase {\n    constructor(parent) {\n        super();\n        /** Unique id for the underlying label. */\n        this._labelId = `mat-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n        this._inert = parent?.inertGroups ?? false;\n    }\n}\n_MatOptgroupBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: _MatOptgroupBase, deps: [{ token: MAT_OPTION_PARENT_COMPONENT, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n_MatOptgroupBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.1.0-rc.0\", type: _MatOptgroupBase, inputs: { label: \"label\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: _MatOptgroupBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_OPTION_PARENT_COMPONENT]\n                }, {\n                    type: Optional\n                }] }]; }, propDecorators: { label: [{\n                type: Input\n            }] } });\n/**\n * Injection token that can be used to reference instances of `MatOptgroup`. It serves as\n * alternative token to the actual `MatOptgroup` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_OPTGROUP = new InjectionToken('MatOptgroup');\n/**\n * Component that is used to group instances of `mat-option`.\n */\nclass MatOptgroup extends _MatOptgroupBase {\n}\nMatOptgroup.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatOptgroup, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatOptgroup.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.0-rc.0\", type: MatOptgroup, selector: \"mat-optgroup\", inputs: { disabled: \"disabled\" }, host: { properties: { \"attr.role\": \"_inert ? null : \\\"group\\\"\", \"attr.aria-disabled\": \"_inert ? null : disabled.toString()\", \"attr.aria-labelledby\": \"_inert ? null : _labelId\" }, classAttribute: \"mat-mdc-optgroup\" }, providers: [{ provide: MAT_OPTGROUP, useExisting: MatOptgroup }], exportAs: [\"matOptgroup\"], usesInheritance: true, ngImport: i0, template: \"<span\\n  class=\\\"mat-mdc-optgroup-label\\\"\\n  aria-hidden=\\\"true\\\"\\n  [class.mdc-list-item--disabled]=\\\"disabled\\\"\\n  [id]=\\\"_labelId\\\">\\n  <span class=\\\"mdc-list-item__primary-text\\\">{{ label }} <ng-content></ng-content></span>\\n</span>\\n\\n<ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\\n\", styles: [\".mat-mdc-optgroup-label{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;padding-left:16px;padding-right:16px;min-height:48px}.mat-mdc-optgroup-label:focus{outline:none}[dir=rtl] .mat-mdc-optgroup-label,.mat-mdc-optgroup-label[dir=rtl]{padding-left:16px;padding-right:16px}.mat-mdc-optgroup-label.mdc-list-item--disabled{opacity:.38}.mat-mdc-optgroup-label .mdc-list-item__primary-text{white-space:normal}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatOptgroup, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-optgroup', exportAs: 'matOptgroup', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, inputs: ['disabled'], host: {\n                        'class': 'mat-mdc-optgroup',\n                        '[attr.role]': '_inert ? null : \"group\"',\n                        '[attr.aria-disabled]': '_inert ? null : disabled.toString()',\n                        '[attr.aria-labelledby]': '_inert ? null : _labelId',\n                    }, providers: [{ provide: MAT_OPTGROUP, useExisting: MatOptgroup }], template: \"<span\\n  class=\\\"mat-mdc-optgroup-label\\\"\\n  aria-hidden=\\\"true\\\"\\n  [class.mdc-list-item--disabled]=\\\"disabled\\\"\\n  [id]=\\\"_labelId\\\">\\n  <span class=\\\"mdc-list-item__primary-text\\\">{{ label }} <ng-content></ng-content></span>\\n</span>\\n\\n<ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\\n\", styles: [\".mat-mdc-optgroup-label{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;padding-left:16px;padding-right:16px;min-height:48px}.mat-mdc-optgroup-label:focus{outline:none}[dir=rtl] .mat-mdc-optgroup-label,.mat-mdc-optgroup-label[dir=rtl]{padding-left:16px;padding-right:16px}.mat-mdc-optgroup-label.mdc-list-item--disabled{opacity:.38}.mat-mdc-optgroup-label .mdc-list-item__primary-text{white-space:normal}\"] }]\n        }] });\n\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n/** Event object emitted by MatOption when selected or deselected. */\nclass MatOptionSelectionChange {\n    constructor(\n    /** Reference to the option that emitted the event. */\n    source, \n    /** Whether the change in the option's value was a result of a user action. */\n    isUserInput = false) {\n        this.source = source;\n        this.isUserInput = isUserInput;\n    }\n}\nclass _MatOptionBase {\n    /** Whether the wrapping component is in multiple selection mode. */\n    get multiple() {\n        return this._parent && this._parent.multiple;\n    }\n    /** Whether or not the option is currently selected. */\n    get selected() {\n        return this._selected;\n    }\n    /** Whether the option is disabled. */\n    get disabled() {\n        return (this.group && this.group.disabled) || this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /** Whether ripples for the option are disabled. */\n    get disableRipple() {\n        return !!(this._parent && this._parent.disableRipple);\n    }\n    constructor(_element, _changeDetectorRef, _parent, group) {\n        this._element = _element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._parent = _parent;\n        this.group = group;\n        this._selected = false;\n        this._active = false;\n        this._disabled = false;\n        this._mostRecentViewValue = '';\n        /** The unique ID of the option. */\n        this.id = `mat-option-${_uniqueIdCounter++}`;\n        /** Event emitted when the option is selected or deselected. */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onSelectionChange = new EventEmitter();\n        /** Emits when the state of the option changes and any parents have to be notified. */\n        this._stateChanges = new Subject();\n    }\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n    get active() {\n        return this._active;\n    }\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n    get viewValue() {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this._text?.nativeElement.textContent || '').trim();\n    }\n    /** Selects the option. */\n    select() {\n        if (!this._selected) {\n            this._selected = true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n    /** Deselects the option. */\n    deselect() {\n        if (this._selected) {\n            this._selected = false;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n    /** Sets focus onto this option. */\n    focus(_origin, options) {\n        // Note that we aren't using `_origin`, but we need to keep it because some internal consumers\n        // use `MatOption` in a `FocusKeyManager` and we need it to match `FocusableOption`.\n        const element = this._getHostElement();\n        if (typeof element.focus === 'function') {\n            element.focus(options);\n        }\n    }\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setActiveStyles() {\n        if (!this._active) {\n            this._active = true;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setInactiveStyles() {\n        if (this._active) {\n            this._active = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel() {\n        return this.viewValue;\n    }\n    /** Ensures the option is selected when activated from the keyboard. */\n    _handleKeydown(event) {\n        if ((event.keyCode === ENTER || event.keyCode === SPACE) && !hasModifierKey(event)) {\n            this._selectViaInteraction();\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     */\n    _selectViaInteraction() {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent(true);\n        }\n    }\n    /**\n     * Gets the `aria-selected` value for the option. We explicitly omit the `aria-selected`\n     * attribute from single-selection, unselected options. Including the `aria-selected=\"false\"`\n     * attributes adds a significant amount of noise to screen-reader users without providing useful\n     * information.\n     */\n    _getAriaSelected() {\n        return this.selected || (this.multiple ? false : null);\n    }\n    /** Returns the correct tabindex for the option depending on disabled state. */\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /** Gets the host DOM element. */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            const viewValue = this.viewValue;\n            if (viewValue !== this._mostRecentViewValue) {\n                if (this._mostRecentViewValue) {\n                    this._stateChanges.next();\n                }\n                this._mostRecentViewValue = viewValue;\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    /** Emits the selection change event. */\n    _emitSelectionChangeEvent(isUserInput = false) {\n        this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n    }\n}\n_MatOptionBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: _MatOptionBase, deps: \"invalid\", target: i0.ɵɵFactoryTarget.Directive });\n_MatOptionBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.1.0-rc.0\", type: _MatOptionBase, inputs: { value: \"value\", id: \"id\", disabled: \"disabled\" }, outputs: { onSelectionChange: \"onSelectionChange\" }, viewQueries: [{ propertyName: \"_text\", first: true, predicate: [\"text\"], descendants: true, static: true }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: _MatOptionBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: undefined }, { type: _MatOptgroupBase }]; }, propDecorators: { value: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], onSelectionChange: [{\n                type: Output\n            }], _text: [{\n                type: ViewChild,\n                args: ['text', { static: true }]\n            }] } });\n/**\n * Single option inside of a `<mat-select>` element.\n */\nclass MatOption extends _MatOptionBase {\n    constructor(element, changeDetectorRef, parent, group) {\n        super(element, changeDetectorRef, parent, group);\n    }\n}\nMatOption.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatOption, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: MAT_OPTION_PARENT_COMPONENT, optional: true }, { token: MAT_OPTGROUP, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatOption.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.0-rc.0\", type: MatOption, selector: \"mat-option\", host: { attributes: { \"role\": \"option\" }, listeners: { \"click\": \"_selectViaInteraction()\", \"keydown\": \"_handleKeydown($event)\" }, properties: { \"attr.tabindex\": \"_getTabIndex()\", \"class.mdc-list-item--selected\": \"selected\", \"class.mat-mdc-option-multiple\": \"multiple\", \"class.mat-mdc-option-active\": \"active\", \"class.mdc-list-item--disabled\": \"disabled\", \"id\": \"id\", \"attr.aria-selected\": \"_getAriaSelected()\", \"attr.aria-disabled\": \"disabled.toString()\" }, classAttribute: \"mat-mdc-option mat-mdc-focus-indicator mdc-list-item\" }, exportAs: [\"matOption\"], usesInheritance: true, ngImport: i0, template: \"<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-mdc-option-pseudo-checkbox\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n<ng-content select=\\\"mat-icon\\\"></ng-content>\\n\\n<span class=\\\"mdc-list-item__primary-text\\\" #text><ng-content></ng-content></span>\\n\\n<!-- See a11y notes inside optgroup.ts for context behind this element. -->\\n<span class=\\\"cdk-visually-hidden\\\" *ngIf=\\\"group && group._inert\\\">({{ group.label }})</span>\\n\\n<div class=\\\"mat-mdc-option-ripple\\\" mat-ripple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disabled || disableRipple\\\">\\n</div>\\n\", styles: [\".mat-mdc-option{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;padding-left:16px;padding-right:16px;-webkit-user-select:none;user-select:none;cursor:pointer;-webkit-tap-highlight-color:rgba(0,0,0,0);min-height:48px}.mat-mdc-option:focus{outline:none}[dir=rtl] .mat-mdc-option,.mat-mdc-option[dir=rtl]{padding-left:16px;padding-right:16px}.mat-mdc-option.mdc-list-item{align-items:center}.mat-mdc-option.mdc-list-item--disabled{opacity:.38;cursor:default}.mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:32px}[dir=rtl] .mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:16px;padding-right:32px}.mat-mdc-option .mat-icon,.mat-mdc-option .mat-pseudo-checkbox{margin-right:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-icon,[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox{margin-right:0;margin-left:16px}.mat-mdc-option .mat-mdc-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-option .mdc-list-item__primary-text{white-space:normal;font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;font-family:inherit;text-decoration:inherit;text-transform:inherit}.cdk-high-contrast-active .mat-mdc-option.mdc-list-item--selected:not(.mat-mdc-option-multiple)::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}[dir=rtl] .cdk-high-contrast-active .mat-mdc-option.mdc-list-item--selected:not(.mat-mdc-option-multiple)::after{right:auto;left:16px}.mat-mdc-option-active::before{content:\\\"\\\"}\"], dependencies: [{ kind: \"directive\", type: MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: MatPseudoCheckbox, selector: \"mat-pseudo-checkbox\", inputs: [\"state\", \"disabled\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatOption, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-option', exportAs: 'matOption', host: {\n                        'role': 'option',\n                        '[attr.tabindex]': '_getTabIndex()',\n                        '[class.mdc-list-item--selected]': 'selected',\n                        '[class.mat-mdc-option-multiple]': 'multiple',\n                        '[class.mat-mdc-option-active]': 'active',\n                        '[class.mdc-list-item--disabled]': 'disabled',\n                        '[id]': 'id',\n                        '[attr.aria-selected]': '_getAriaSelected()',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '(click)': '_selectViaInteraction()',\n                        '(keydown)': '_handleKeydown($event)',\n                        'class': 'mat-mdc-option mat-mdc-focus-indicator mdc-list-item',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-mdc-option-pseudo-checkbox\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n<ng-content select=\\\"mat-icon\\\"></ng-content>\\n\\n<span class=\\\"mdc-list-item__primary-text\\\" #text><ng-content></ng-content></span>\\n\\n<!-- See a11y notes inside optgroup.ts for context behind this element. -->\\n<span class=\\\"cdk-visually-hidden\\\" *ngIf=\\\"group && group._inert\\\">({{ group.label }})</span>\\n\\n<div class=\\\"mat-mdc-option-ripple\\\" mat-ripple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disabled || disableRipple\\\">\\n</div>\\n\", styles: [\".mat-mdc-option{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;padding-left:16px;padding-right:16px;-webkit-user-select:none;user-select:none;cursor:pointer;-webkit-tap-highlight-color:rgba(0,0,0,0);min-height:48px}.mat-mdc-option:focus{outline:none}[dir=rtl] .mat-mdc-option,.mat-mdc-option[dir=rtl]{padding-left:16px;padding-right:16px}.mat-mdc-option.mdc-list-item{align-items:center}.mat-mdc-option.mdc-list-item--disabled{opacity:.38;cursor:default}.mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:32px}[dir=rtl] .mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:16px;padding-right:32px}.mat-mdc-option .mat-icon,.mat-mdc-option .mat-pseudo-checkbox{margin-right:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-icon,[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox{margin-right:0;margin-left:16px}.mat-mdc-option .mat-mdc-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-option .mdc-list-item__primary-text{white-space:normal;font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;font-family:inherit;text-decoration:inherit;text-transform:inherit}.cdk-high-contrast-active .mat-mdc-option.mdc-list-item--selected:not(.mat-mdc-option-multiple)::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}[dir=rtl] .cdk-high-contrast-active .mat-mdc-option.mdc-list-item--selected:not(.mat-mdc-option-multiple)::after{right:auto;left:16px}.mat-mdc-option-active::before{content:\\\"\\\"}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_OPTION_PARENT_COMPONENT]\n                }] }, { type: MatOptgroup, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_OPTGROUP]\n                }] }]; } });\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nfunction _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\n    if (optionGroups.length) {\n        let optionsArray = options.toArray();\n        let groups = optionGroups.toArray();\n        let groupCounter = 0;\n        for (let i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n        return groupCounter;\n    }\n    return 0;\n}\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionOffset Offset of the option from the top of the panel.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nfunction _getOptionScrollPosition(optionOffset, optionHeight, currentScrollPosition, panelHeight) {\n    if (optionOffset < currentScrollPosition) {\n        return optionOffset;\n    }\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n    return currentScrollPosition;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatOptionModule {\n}\nMatOptionModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatOptionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatOptionModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatOptionModule, declarations: [MatOption, MatOptgroup], imports: [MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule], exports: [MatOption, MatOptgroup] });\nMatOptionModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatOptionModule, imports: [MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.0-rc.0\", ngImport: i0, type: MatOptionModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule],\n                    exports: [MatOption, MatOptgroup],\n                    declarations: [MatOption, MatOptgroup],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AnimationCurves, AnimationDurations, DateAdapter, ErrorStateMatcher, MATERIAL_SANITY_CHECKS, MAT_DATE_FORMATS, MAT_DATE_LOCALE, MAT_DATE_LOCALE_FACTORY, MAT_NATIVE_DATE_FORMATS, MAT_OPTGROUP, MAT_OPTION_PARENT_COMPONENT, MAT_RIPPLE_GLOBAL_OPTIONS, MatCommonModule, MatLine, MatLineModule, MatNativeDateModule, MatOptgroup, MatOption, MatOptionModule, MatOptionSelectionChange, MatPseudoCheckbox, MatPseudoCheckboxModule, MatRipple, MatRippleModule, NativeDateAdapter, NativeDateModule, RippleRef, RippleRenderer, ShowOnDirtyErrorStateMatcher, VERSION, _MatOptgroupBase, _MatOptionBase, _countGroupLabelsBeforeOption, _getOptionScrollPosition, defaultRippleAnimationConfig, mixinColor, mixinDisableRipple, mixinDisabled, mixinErrorState, mixinInitialized, mixinTabIndex, setLines };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}