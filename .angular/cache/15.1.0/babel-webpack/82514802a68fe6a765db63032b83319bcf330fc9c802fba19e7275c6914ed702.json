{"ast":null,"code":"import { EGame } from 'src/app/data/interfaces';\nimport { state } from '../../data/dummy';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/table\";\nimport * as i2 from \"@angular/material/button\";\nimport * as i3 from \"@angular/material/input\";\n\nfunction GamegridComponent_th_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 15);\n    i0.ɵɵtext(1, \" No. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction GamegridComponent_td_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const player_r12 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", player_r12.position + 1, \" \");\n  }\n}\n\nfunction GamegridComponent_th_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 15);\n    i0.ɵɵtext(1, \" Name \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction GamegridComponent_td_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const player_r13 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", player_r13.name, \" \");\n  }\n}\n\nfunction GamegridComponent_th_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 15);\n    i0.ɵɵtext(1, \" Score \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction GamegridComponent_td_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\", 16)(1, \"input\", 17);\n    i0.ɵɵlistener(\"change\", function GamegridComponent_td_12_Template_input_change_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const i_r15 = restoredCtx.index;\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.saveScore($event, i_r15));\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const player_r14 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", player_r14.score);\n  }\n}\n\nfunction GamegridComponent_th_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 15);\n    i0.ɵɵtext(1, \" Nullen \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction GamegridComponent_td_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const player_r18 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", player_r18.nullen, \"\");\n  }\n}\n\nfunction GamegridComponent_th_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 15);\n    i0.ɵɵtext(1, \" Total \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction GamegridComponent_td_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const player_r19 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", player_r19.total, \"\");\n  }\n}\n\nfunction GamegridComponent_tr_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 18);\n  }\n}\n\nfunction GamegridComponent_tr_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 19);\n  }\n}\n\nexport class GamegridComponent {\n  constructor() {\n    this.displayedColumns = ['position', 'name', 'score', 'nullen', 'total'];\n    let s;\n\n    if (localStorage.getItem('currentState')) {\n      s = JSON.parse(localStorage.getItem('currentState') ?? '');\n    } else {\n      s = state;\n    }\n\n    this.gameState = s;\n  }\n\n  ngOnInit() {}\n\n  saveScore(event, index) {\n    if (event.target && event.target.value) {\n      this.addScoreToTotal(index, parseInt(event.target.value));\n    }\n\n    event.target.value = '';\n  }\n\n  addScoreToTotal(id, score) {\n    let state = this.gameState;\n    state.currentPlayer = id;\n    let player = state.players.find(p => p.id === id);\n\n    if (player) {\n      player.score = score;\n      player.total = player.total + score;\n    } // Add nullen\n\n\n    if (this.gameState.game.type === EGame.NULLENSPEL) {\n      if (player && player.total === 0) {\n        player.nullen = player.nullen + 1;\n      }\n    }\n\n    this.gameState = state;\n  }\n\n  onNextRound() {\n    let state = this.gameState; // Add round to each player\n\n    state.players.forEach(player => player.currentRound = player.currentRound + 1); // Calculate positions\n\n    let orderedPlayers = [...state.players];\n\n    switch (this.gameState.game.type) {\n      case EGame.UNO:\n        orderedPlayers = this.orderMostPointsFirst(state);\n        break;\n\n      case EGame.CHINEESPOEPEN:\n        orderedPlayers = this.orderMostPointsFirst(state);\n        break;\n\n      case EGame.NULLENSPEL:\n        orderedPlayers = this.orderNullenSpel(state);\n        break;\n\n      case EGame.PHASE10:\n        orderedPlayers = this.orderLeastPointsFirst(state);\n        break;\n\n      case EGame.NONE:\n        orderedPlayers = this.orderMostPointsFirst(state);\n        break;\n\n      default:\n        orderedPlayers = this.orderMostPointsFirst(state);\n        break;\n    }\n\n    state.players.forEach(player => player.position = orderedPlayers.findIndex(p => p.name === player.name)); // Persist\n\n    this.gameState = state;\n    this.save('currentState', JSON.stringify(this.gameState));\n  }\n\n  orderMostPointsFirst(state) {\n    return [...state.players].sort((a, b) => {\n      if (a.total > b.total) return -1;else if (a.total < b.total) return 1;else return 0;\n    });\n  }\n\n  orderNullenSpel(state) {\n    return [...state.players].sort((a, b) => {\n      if (a.nullen > b.nullen) return -1;else if (a.nullen < b.nullen) return 1;else return 0;\n    });\n  }\n\n  orderLeastPointsFirst(state) {\n    return [...state.players].sort((a, b) => {\n      if (a.total < b.total) return -1;else if (a.total > b.total) return 1;else return 0;\n    });\n  }\n\n  save(key, data) {\n    localStorage.setItem(key, data);\n  }\n\n  onEndGame() {}\n\n}\n\nGamegridComponent.ɵfac = function GamegridComponent_Factory(t) {\n  return new (t || GamegridComponent)();\n};\n\nGamegridComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: GamegridComponent,\n  selectors: [[\"app-gamegrid\"]],\n  decls: 29,\n  vars: 5,\n  consts: [[1, \"game-container\"], [\"mat-table\", \"\", 3, \"dataSource\"], [\"matColumnDef\", \"position\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"matColumnDef\", \"name\"], [\"matColumnDef\", \"score\"], [\"matColumnDef\", \"nullen\"], [\"matColumnDef\", \"total\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 4, \"matRowDef\", \"matRowDefColumns\"], [1, \"button-container\"], [1, \"next-round-button-container\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [2, \"width\", \"10px\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"], [\"matInput\", \"\", \"type\", \"number\", \"autoComplete\", \"off\", 3, \"placeholder\", \"change\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\"]],\n  template: function GamegridComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"table\", 1);\n      i0.ɵɵelementContainerStart(4, 2);\n      i0.ɵɵtemplate(5, GamegridComponent_th_5_Template, 2, 0, \"th\", 3);\n      i0.ɵɵtemplate(6, GamegridComponent_td_6_Template, 2, 1, \"td\", 4);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(7, 5);\n      i0.ɵɵtemplate(8, GamegridComponent_th_8_Template, 2, 0, \"th\", 3);\n      i0.ɵɵtemplate(9, GamegridComponent_td_9_Template, 2, 1, \"td\", 4);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(10, 6);\n      i0.ɵɵtemplate(11, GamegridComponent_th_11_Template, 2, 0, \"th\", 3);\n      i0.ɵɵtemplate(12, GamegridComponent_td_12_Template, 2, 1, \"td\", 4);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(13, 7);\n      i0.ɵɵtemplate(14, GamegridComponent_th_14_Template, 2, 0, \"th\", 3);\n      i0.ɵɵtemplate(15, GamegridComponent_td_15_Template, 2, 1, \"td\", 4);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(16, 8);\n      i0.ɵɵtemplate(17, GamegridComponent_th_17_Template, 2, 0, \"th\", 3);\n      i0.ɵɵtemplate(18, GamegridComponent_td_18_Template, 2, 1, \"td\", 4);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵtemplate(19, GamegridComponent_tr_19_Template, 1, 0, \"tr\", 9);\n      i0.ɵɵtemplate(20, GamegridComponent_tr_20_Template, 1, 0, \"tr\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"div\", 11)(22, \"div\", 12)(23, \"button\", 13);\n      i0.ɵɵlistener(\"click\", function GamegridComponent_Template_button_click_23_listener() {\n        return ctx.onNextRound();\n      });\n      i0.ɵɵtext(24, \"Next round\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(25, \"div\", 14);\n      i0.ɵɵelementStart(26, \"div\", 12)(27, \"button\", 13);\n      i0.ɵɵlistener(\"click\", function GamegridComponent_Template_button_click_27_listener() {\n        return ctx.onEndGame();\n      });\n      i0.ɵɵtext(28, \"End game\");\n      i0.ɵɵelementEnd()()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate2(\"\", ctx.gameState.game.name, \" - round \", ctx.gameState.players[0].currentRound, \"\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"dataSource\", ctx.gameState.players);\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"matHeaderRowDef\", ctx.displayedColumns);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"matRowDefColumns\", ctx.displayedColumns);\n    }\n  },\n  dependencies: [i1.MatTable, i1.MatHeaderCellDef, i1.MatHeaderRowDef, i1.MatColumnDef, i1.MatCellDef, i1.MatRowDef, i1.MatHeaderCell, i1.MatCell, i1.MatHeaderRow, i1.MatRow, i2.MatButton, i3.MatInput],\n  styles: [\".next-round-button-container[_ngcontent-%COMP%] {\\n  margin-top: 10px;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\n.game-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  width: 100vw;\\n  align-items: center;\\n}\\n\\n.button-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: center;\\n  align-items: center;\\n  width: 100%;\\n  border: 1px solid red;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9nYW1lZ3JpZC9nYW1lZ3JpZC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGdCQUFBO0VBQ0EsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsdUJBQUE7RUFDQSxtQkFBQTtBQUNKOztBQUVBO0VBQ0ksYUFBQTtFQUNBLHNCQUFBO0VBQ0EsWUFBQTtFQUNBLG1CQUFBO0FBQ0o7O0FBRUE7RUFDSSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0VBQ0EsV0FBQTtFQUNBLHFCQUFBO0FBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyIubmV4dC1yb3VuZC1idXR0b24tY29udGFpbmVyIHtcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4uZ2FtZS1jb250YWluZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICB3aWR0aDogMTAwdnc7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLmJ1dHRvbi1jb250YWluZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGJvcmRlcjogMXB4IHNvbGlkIHJlZDtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["EGame","state","i0","GamegridComponent","constructor","s","localStorage","getItem","JSON","parse","gameState","ngOnInit","saveScore","event","index","target","value","addScoreToTotal","parseInt","id","score","currentPlayer","player","players","find","p","total","game","type","NULLENSPEL","nullen","onNextRound","forEach","currentRound","orderedPlayers","UNO","orderMostPointsFirst","CHINEESPOEPEN","orderNullenSpel","PHASE10","orderLeastPointsFirst","NONE","position","findIndex","name","save","stringify","sort","a","b","key","data","setItem","onEndGame","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/colinvercruysse/Documents/vercruyssegameboard/vercruyssegameboard/src/app/components/gamegrid/gamegrid.component.ts","/Users/colinvercruysse/Documents/vercruyssegameboard/vercruyssegameboard/src/app/components/gamegrid/gamegrid.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { EGame, GameState, Player } from 'src/app/data/interfaces';\nimport { state } from '../../data/dummy';\n\n@Component({\n  selector: 'app-gamegrid',\n  templateUrl: './gamegrid.component.html',\n  styleUrls: ['./gamegrid.component.scss']\n})\nexport class GamegridComponent implements OnInit {\n  public gameState: GameState;\n\n  displayedColumns: string[] = ['position','name', 'score','nullen', 'total'];\n\n  constructor() { \n    let s: GameState;\n\n    if (localStorage.getItem('currentState')) {\n      s = JSON.parse(localStorage.getItem('currentState')?? '');\n    } else {\n      s = state;\n    }\n    this.gameState = s;\n  }\n\n  ngOnInit(): void {\n  }\n\n  saveScore(event: any, index: number) {\n    if (event.target && event.target.value) {\n      this.addScoreToTotal(index,parseInt(event.target.value))\n    }\n\n    event.target.value = '';\n  }\n\n  addScoreToTotal(id: number, score: number) {\n    let state = this.gameState;\n\n    state.currentPlayer = id;\n\n    let player = state.players.find(p => p.id === id);\n    if (player) {\n      player.score = score;\n      player.total = player.total + score;\n    }\n\n    // Add nullen\n    if (this.gameState.game.type === EGame.NULLENSPEL) {\n      if (player && player.total === 0) {\n        player.nullen = player.nullen + 1;\n      }\n    }\n\n    this.gameState = state;\n  }\n\n  onNextRound() {\n    let state = this.gameState;\n\n    // Add round to each player\n    state.players.forEach(player => player.currentRound = player.currentRound + 1);\n\n    // Calculate positions\n    let orderedPlayers = [...state.players];\n    switch(this.gameState.game.type) {\n      case EGame.UNO:\n        orderedPlayers = this.orderMostPointsFirst(state);\n        break;\n\n      case EGame.CHINEESPOEPEN:\n        orderedPlayers = this.orderMostPointsFirst(state);\n        break;\n\n      case EGame.NULLENSPEL:\n        orderedPlayers = this.orderNullenSpel(state);\n        break;\n\n      case EGame.PHASE10:\n        orderedPlayers = this.orderLeastPointsFirst(state);\n        break;\n\n      case EGame.NONE:\n        orderedPlayers = this.orderMostPointsFirst(state);\n        break;\n      \n      default:\n        orderedPlayers = this.orderMostPointsFirst(state);\n        break;\n    }\n\n\n    state.players.forEach(player => player.position = orderedPlayers.findIndex(p => p.name === player.name));\n\n    // Persist\n    this.gameState = state;\n    this.save('currentState', JSON.stringify(this.gameState));\n  }\n\n  orderMostPointsFirst(state: GameState): Player[] {\n    return [...state.players].sort((a, b) => {\n      if (a.total > b.total) return -1;\n      else if (a.total < b.total) return 1;\n      else return 0;\n    });\n  }\n\n  orderNullenSpel(state: GameState): Player[] {\n    return [...state.players].sort((a, b) => {\n      if (a.nullen > b.nullen) return -1;\n      else if (a.nullen < b.nullen) return 1;\n      else return 0;\n    })\n  }\n\n  orderLeastPointsFirst(state: GameState): Player[] {\n    return [...state.players].sort((a, b) => {\n      if (a.total < b.total) return -1;\n      else if (a.total > b.total) return 1;\n      else return 0;\n    });\n  }\n\n  save(key: string, data: string) {\n    localStorage.setItem(key, data);\n  }\n\n  onEndGame() {\n    \n  }\n\n}\n","<div class=\"game-container\">\n  <h1>{{gameState.game.name}} - round {{gameState.players[0].currentRound}}</h1>\n  <table mat-table [dataSource]=\"gameState.players\">\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"position\">\n      <th mat-header-cell *matHeaderCellDef> No. </th>\n      <td mat-cell *matCellDef=\"let player\"> {{player.position + 1}} </td>\n    </ng-container>\n  \n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef> Name </th>\n      <td mat-cell *matCellDef=\"let player\"> {{player.name}} </td>\n    </ng-container>\n  \n    <!-- Score Column -->\n    <ng-container matColumnDef=\"score\">\n      <th mat-header-cell *matHeaderCellDef> Score </th>\n      <td mat-cell *matCellDef=\"let player; let i = index\"> \n        <input matInput type=\"number\" autoComplete=\"off\"\n        placeholder={{player.score}} (change)=\"saveScore($event, i)\">\n      </td>\n    </ng-container>\n  \n    <!-- Nullen Column -->\n    <ng-container matColumnDef=\"nullen\">\n      <th mat-header-cell *matHeaderCellDef> Nullen </th>\n      <td mat-cell *matCellDef=\"let player\"> {{player.nullen}}</td>\n    </ng-container>\n  \n    <!-- total Column -->\n    <ng-container matColumnDef=\"total\">\n      <th mat-header-cell *matHeaderCellDef> Total </th>\n      <td mat-cell *matCellDef=\"let player\"> {{player.total}}</td>\n    </ng-container>\n  \n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n  \n  <div class=\"button-container\">\n    <div class=\"next-round-button-container\">\n      <button mat-raised-button color=\"primary\" (click)=\"onNextRound()\">Next round</button>\n    </div>\n    <div style=\"width: 10px;\"></div>\n    <div class=\"next-round-button-container\">\n      <button mat-raised-button color=\"primary\" (click)=\"onEndGame()\">End game</button>\n    </div>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}