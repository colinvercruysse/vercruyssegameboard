{"ast":null,"code":"import { EGame } from 'src/app/data/interfaces';\nimport { state } from '../../data/dummy';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/table\";\nimport * as i2 from \"@angular/material/button\";\nimport * as i3 from \"@angular/material/input\";\n\nfunction GamegridComponent_th_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 15);\n    i0.ɵɵtext(1, \" No. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction GamegridComponent_td_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const player_r12 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", player_r12.position + 1, \" \");\n  }\n}\n\nfunction GamegridComponent_th_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 15);\n    i0.ɵɵtext(1, \" Name \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction GamegridComponent_td_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const player_r13 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", player_r13.name, \" \");\n  }\n}\n\nfunction GamegridComponent_th_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 15);\n    i0.ɵɵtext(1, \" Score \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction GamegridComponent_td_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\", 16)(1, \"input\", 17);\n    i0.ɵɵlistener(\"change\", function GamegridComponent_td_12_Template_input_change_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const i_r15 = restoredCtx.index;\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.saveScore($event, i_r15));\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const player_r14 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", player_r14.score);\n  }\n}\n\nfunction GamegridComponent_th_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 15);\n    i0.ɵɵtext(1, \" Nullen \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction GamegridComponent_td_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const player_r18 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", player_r18.nullen, \"\");\n  }\n}\n\nfunction GamegridComponent_th_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 15);\n    i0.ɵɵtext(1, \" Total \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction GamegridComponent_td_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const player_r19 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", player_r19.total, \"\");\n  }\n}\n\nfunction GamegridComponent_tr_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 18);\n  }\n}\n\nfunction GamegridComponent_tr_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 19);\n  }\n}\n\nexport class GamegridComponent {\n  constructor() {\n    this.displayedColumns = ['position', 'name', 'score', 'nullen', 'total'];\n    let s;\n\n    if (localStorage.getItem('currentState')) {\n      s = JSON.parse(localStorage.getItem('currentState') ?? '');\n    } else {\n      s = state;\n    }\n\n    this.gameState = s;\n  }\n\n  ngOnInit() {}\n\n  saveScore(event, index) {\n    if (event.target && event.target.value) {\n      this.addScoreToTotal(index, parseInt(event.target.value));\n    }\n\n    event.target.value = '';\n  }\n\n  addScoreToTotal(id, score) {\n    let state = this.gameState;\n    state.currentPlayer = id;\n    let player = state.players.find(p => p.id === id);\n\n    if (player) {\n      player.score = score;\n      player.total = player.total + score;\n    } // Add nullen\n\n\n    if (this.gameState.game.type === EGame.NULLENSPEL) {\n      if (player && player.total === 0) {\n        player.nullen = player.nullen + 1;\n      }\n    }\n\n    this.gameState = state;\n  }\n\n  onNextRound() {\n    let state = this.gameState; // Add round to each player\n\n    state.players.forEach(player => player.currentRound = player.currentRound + 1); // Calculate positions\n\n    let orderedPlayers = [...state.players];\n\n    switch (this.gameState.game.type) {\n      case EGame.UNO:\n        orderedPlayers = this.orderMostPointsFirst(state);\n        break;\n\n      case EGame.CHINEESPOEPEN:\n        orderedPlayers = this.orderMostPointsFirst(state);\n        break;\n\n      case EGame.NULLENSPEL:\n        orderedPlayers = this.orderNullenSpel(state);\n        break;\n\n      case EGame.PHASE10:\n        orderedPlayers = this.orderLeastPointsFirst(state);\n        break;\n\n      case EGame.NONE:\n        orderedPlayers = this.orderMostPointsFirst(state);\n        break;\n\n      default:\n        orderedPlayers = this.orderMostPointsFirst(state);\n        break;\n    }\n\n    state.players.forEach(player => player.position = orderedPlayers.findIndex(p => p.name === player.name)); // Persist\n\n    this.gameState = state;\n    this.save('currentState', JSON.stringify(this.gameState));\n  }\n\n  orderMostPointsFirst(state) {\n    return [...state.players].sort((a, b) => {\n      if (a.total > b.total) return -1;else if (a.total < b.total) return 1;else return 0;\n    });\n  }\n\n  orderNullenSpel(state) {\n    return [...state.players].sort((a, b) => {\n      if (a.nullen > b.nullen) return -1;else if (a.nullen < b.nullen) return 1;else return 0;\n    });\n  }\n\n  orderLeastPointsFirst(state) {\n    return [...state.players].sort((a, b) => {\n      if (a.total < b.total) return -1;else if (a.total > b.total) return 1;else return 0;\n    });\n  }\n\n  save(key, data) {\n    localStorage.setItem(key, data);\n  }\n\n  onEndGame() {}\n\n}\n\nGamegridComponent.ɵfac = function GamegridComponent_Factory(t) {\n  return new (t || GamegridComponent)();\n};\n\nGamegridComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: GamegridComponent,\n  selectors: [[\"app-gamegrid\"]],\n  decls: 29,\n  vars: 5,\n  consts: [[1, \"game-container\"], [\"mat-table\", \"\", 3, \"dataSource\"], [\"matColumnDef\", \"position\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"matColumnDef\", \"name\"], [\"matColumnDef\", \"score\"], [\"matColumnDef\", \"nullen\"], [\"matColumnDef\", \"total\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 4, \"matRowDef\", \"matRowDefColumns\"], [1, \"button-container\"], [1, \"next-round-button-container\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [2, \"width\", \"30px\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"], [\"matInput\", \"\", \"type\", \"number\", \"autoComplete\", \"off\", 2, \"width\", \"45px\", 3, \"placeholder\", \"change\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\"]],\n  template: function GamegridComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"table\", 1);\n      i0.ɵɵelementContainerStart(4, 2);\n      i0.ɵɵtemplate(5, GamegridComponent_th_5_Template, 2, 0, \"th\", 3);\n      i0.ɵɵtemplate(6, GamegridComponent_td_6_Template, 2, 1, \"td\", 4);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(7, 5);\n      i0.ɵɵtemplate(8, GamegridComponent_th_8_Template, 2, 0, \"th\", 3);\n      i0.ɵɵtemplate(9, GamegridComponent_td_9_Template, 2, 1, \"td\", 4);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(10, 6);\n      i0.ɵɵtemplate(11, GamegridComponent_th_11_Template, 2, 0, \"th\", 3);\n      i0.ɵɵtemplate(12, GamegridComponent_td_12_Template, 2, 1, \"td\", 4);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(13, 7);\n      i0.ɵɵtemplate(14, GamegridComponent_th_14_Template, 2, 0, \"th\", 3);\n      i0.ɵɵtemplate(15, GamegridComponent_td_15_Template, 2, 1, \"td\", 4);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(16, 8);\n      i0.ɵɵtemplate(17, GamegridComponent_th_17_Template, 2, 0, \"th\", 3);\n      i0.ɵɵtemplate(18, GamegridComponent_td_18_Template, 2, 1, \"td\", 4);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵtemplate(19, GamegridComponent_tr_19_Template, 1, 0, \"tr\", 9);\n      i0.ɵɵtemplate(20, GamegridComponent_tr_20_Template, 1, 0, \"tr\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"div\", 11)(22, \"div\", 12)(23, \"button\", 13);\n      i0.ɵɵlistener(\"click\", function GamegridComponent_Template_button_click_23_listener() {\n        return ctx.onNextRound();\n      });\n      i0.ɵɵtext(24, \"Next round\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(25, \"div\", 14);\n      i0.ɵɵelementStart(26, \"div\", 12)(27, \"button\", 13);\n      i0.ɵɵlistener(\"click\", function GamegridComponent_Template_button_click_27_listener() {\n        return ctx.onEndGame();\n      });\n      i0.ɵɵtext(28, \"End game\");\n      i0.ɵɵelementEnd()()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate2(\"\", ctx.gameState.game.name, \" - round \", ctx.gameState.players[0].currentRound, \"\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"dataSource\", ctx.gameState.players);\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"matHeaderRowDef\", ctx.displayedColumns);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"matRowDefColumns\", ctx.displayedColumns);\n    }\n  },\n  dependencies: [i1.MatTable, i1.MatHeaderCellDef, i1.MatHeaderRowDef, i1.MatColumnDef, i1.MatCellDef, i1.MatRowDef, i1.MatHeaderCell, i1.MatCell, i1.MatHeaderRow, i1.MatRow, i2.MatButton, i3.MatInput],\n  styles: [\".game-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;width:100%;align-items:center;justify-content:center}.next-round-button-container[_ngcontent-%COMP%]{margin-top:10px;display:flex;flex-direction:column;justify-content:center;align-items:center}.button-container[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:center;align-items:center;width:100%}\"]\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}