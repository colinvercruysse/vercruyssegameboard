{"ast":null,"code":"import { EGame } from 'src/app/data/interfaces';\nimport { state } from '../../data/dummy';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/material/table\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/material/input\";\n\nfunction GamegridComponent_th_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 12);\n    i0.ɵɵtext(1, \" No. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction GamegridComponent_td_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const player_r11 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", player_r11.position + 1, \" \");\n  }\n}\n\nfunction GamegridComponent_th_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 12);\n    i0.ɵɵtext(1, \" Name \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction GamegridComponent_td_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const player_r12 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", player_r12.name, \" \");\n  }\n}\n\nfunction GamegridComponent_th_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 12);\n    i0.ɵɵtext(1, \" Score \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction GamegridComponent_td_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\", 13)(1, \"input\", 14);\n    i0.ɵɵlistener(\"change\", function GamegridComponent_td_11_Template_input_change_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r16);\n      const i_r14 = restoredCtx.index;\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.saveScore($event, i_r14));\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const player_r13 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", player_r13.score);\n  }\n}\n\nfunction GamegridComponent_ng_container_12_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 12);\n    i0.ɵɵtext(1, \" Nullen \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction GamegridComponent_ng_container_12_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const player_r19 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", player_r19.nullen, \"\");\n  }\n}\n\nfunction GamegridComponent_ng_container_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 15);\n    i0.ɵɵtemplate(1, GamegridComponent_ng_container_12_th_1_Template, 2, 0, \"th\", 2);\n    i0.ɵɵtemplate(2, GamegridComponent_ng_container_12_td_2_Template, 2, 1, \"td\", 3);\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction GamegridComponent_th_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 12);\n    i0.ɵɵtext(1, \" Total \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction GamegridComponent_td_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const player_r20 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", player_r20.total, \"\");\n  }\n}\n\nfunction GamegridComponent_tr_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 16);\n  }\n}\n\nfunction GamegridComponent_tr_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 17);\n  }\n}\n\nexport class GamegridComponent {\n  constructor() {\n    this.displayedColumns = ['position', 'name', 'score', 'nullen', 'total'];\n    let s;\n\n    if (localStorage.getItem('currentState')) {\n      s = JSON.parse(localStorage.getItem('currentState') ?? '');\n    } else {\n      s = state;\n    }\n\n    this.gameState = s;\n  }\n\n  ngOnInit() {}\n\n  saveScore(event, index) {\n    if (event.target && event.target.value) {\n      this.addScoreToTotal(index, parseInt(event.target.value));\n    }\n\n    event.target.value = '';\n  }\n\n  addScoreToTotal(id, score) {\n    let state = this.gameState;\n    state.currentPlayer = id;\n    let player = state.players.find(p => p.id === id);\n\n    if (player) {\n      player.score = score;\n      player.total = player.total + score;\n    } // Add nullen\n\n\n    if (this.gameState.game.type === EGame.NULLENSPEL) {\n      if (player && player.total === 0) {\n        player.nullen = player.nullen + 1;\n      }\n    }\n\n    this.gameState = state;\n  }\n\n  onNextRound() {\n    let state = this.gameState; // Add round to each player\n\n    state.players.forEach(player => player.currentRound = player.currentRound + 1); // Calculate positions\n\n    let orderedPlayers = [...state.players];\n\n    switch (this.gameState.game.type) {\n      case EGame.UNO:\n        orderedPlayers = this.orderUno(state);\n        break;\n\n      case EGame.UNO:\n        orderedPlayers = this.orderUno(state);\n        break;\n    }\n\n    state.players.forEach(player => player.position = orderedPlayers.findIndex(p => p.name === player.name)); // Persist\n\n    this.gameState = state;\n    this.save('currentState', JSON.stringify(this.gameState));\n  }\n\n  orderUno(state) {\n    return [...state.players].sort((a, b) => {\n      if (a.total > b.total) return -1;else if (a.total < b.total) return 1;else return 0;\n    });\n  }\n\n  save(key, data) {\n    localStorage.setItem(key, data);\n  }\n\n}\n\nGamegridComponent.ɵfac = function GamegridComponent_Factory(t) {\n  return new (t || GamegridComponent)();\n};\n\nGamegridComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: GamegridComponent,\n  selectors: [[\"app-gamegrid\"]],\n  decls: 21,\n  vars: 5,\n  consts: [[\"mat-table\", \"\", 3, \"dataSource\"], [\"matColumnDef\", \"position\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"matColumnDef\", \"name\"], [\"matColumnDef\", \"score\"], [\"matColumnDef\", \"nullen\", 4, \"ngIf\"], [\"matColumnDef\", \"total\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 4, \"matRowDef\", \"matRowDefColumns\"], [1, \"next-round-button-container\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"], [\"matInput\", \"\", \"type\", \"number\", 3, \"placeholder\", \"change\"], [\"matColumnDef\", \"nullen\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\"]],\n  template: function GamegridComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"table\", 0);\n      i0.ɵɵelementContainerStart(3, 1);\n      i0.ɵɵtemplate(4, GamegridComponent_th_4_Template, 2, 0, \"th\", 2);\n      i0.ɵɵtemplate(5, GamegridComponent_td_5_Template, 2, 1, \"td\", 3);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(6, 4);\n      i0.ɵɵtemplate(7, GamegridComponent_th_7_Template, 2, 0, \"th\", 2);\n      i0.ɵɵtemplate(8, GamegridComponent_td_8_Template, 2, 1, \"td\", 3);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(9, 5);\n      i0.ɵɵtemplate(10, GamegridComponent_th_10_Template, 2, 0, \"th\", 2);\n      i0.ɵɵtemplate(11, GamegridComponent_td_11_Template, 2, 1, \"td\", 3);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵtemplate(12, GamegridComponent_ng_container_12_Template, 3, 0, \"ng-container\", 6);\n      i0.ɵɵelementContainerStart(13, 7);\n      i0.ɵɵtemplate(14, GamegridComponent_th_14_Template, 2, 0, \"th\", 2);\n      i0.ɵɵtemplate(15, GamegridComponent_td_15_Template, 2, 1, \"td\", 3);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵtemplate(16, GamegridComponent_tr_16_Template, 1, 0, \"tr\", 8);\n      i0.ɵɵtemplate(17, GamegridComponent_tr_17_Template, 1, 0, \"tr\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\", 10)(19, \"button\", 11);\n      i0.ɵɵlistener(\"click\", function GamegridComponent_Template_button_click_19_listener() {\n        return ctx.onNextRound();\n      });\n      i0.ɵɵtext(20, \"Next round\");\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(ctx.gameState.game.name);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"dataSource\", ctx.gameState.players);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngIf\", ctx.gameState.game.name == \"Nullenspel\");\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"matHeaderRowDef\", ctx.displayedColumns);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"matRowDefColumns\", ctx.displayedColumns);\n    }\n  },\n  dependencies: [i1.NgIf, i2.MatTable, i2.MatHeaderCellDef, i2.MatHeaderRowDef, i2.MatColumnDef, i2.MatCellDef, i2.MatRowDef, i2.MatHeaderCell, i2.MatCell, i2.MatHeaderRow, i2.MatRow, i3.MatButton, i4.MatInput],\n  styles: [\".next-round-button-container[_ngcontent-%COMP%] {\\n  margin-top: 10px;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9nYW1lZ3JpZC9nYW1lZ3JpZC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGdCQUFBO0VBQ0EsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsdUJBQUE7RUFDQSxtQkFBQTtBQUNKIiwic291cmNlc0NvbnRlbnQiOlsiLm5leHQtcm91bmQtYnV0dG9uLWNvbnRhaW5lciB7XG4gICAgbWFyZ2luLXRvcDogMTBweDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["EGame","state","i0","GamegridComponent","constructor","s","localStorage","getItem","JSON","parse","gameState","ngOnInit","saveScore","event","index","target","value","addScoreToTotal","parseInt","id","score","currentPlayer","player","players","find","p","total","game","type","NULLENSPEL","nullen","onNextRound","forEach","currentRound","orderedPlayers","UNO","orderUno","position","findIndex","name","save","stringify","sort","a","b","key","data","setItem","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/colinvercruysse/Documents/vercruyssegameboard/vercruyssegameboard/src/app/components/gamegrid/gamegrid.component.ts","/Users/colinvercruysse/Documents/vercruyssegameboard/vercruyssegameboard/src/app/components/gamegrid/gamegrid.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { EGame, GameState, Player } from 'src/app/data/interfaces';\nimport { state } from '../../data/dummy';\n\n@Component({\n  selector: 'app-gamegrid',\n  templateUrl: './gamegrid.component.html',\n  styleUrls: ['./gamegrid.component.scss']\n})\nexport class GamegridComponent implements OnInit {\n  public gameState: GameState;\n\n  displayedColumns: string[] = ['position','name', 'score','nullen', 'total'];\n\n  constructor() { \n    let s: GameState;\n\n    if (localStorage.getItem('currentState')) {\n      s = JSON.parse(localStorage.getItem('currentState')?? '');\n    } else {\n      s = state;\n    }\n    this.gameState = s;\n  }\n\n  ngOnInit(): void {\n  }\n\n  saveScore(event: any, index: number) {\n    if (event.target && event.target.value) {\n      this.addScoreToTotal(index,parseInt(event.target.value))\n    }\n\n    event.target.value = '';\n  }\n\n  addScoreToTotal(id: number, score: number) {\n    let state = this.gameState;\n\n    state.currentPlayer = id;\n\n    let player = state.players.find(p => p.id === id);\n    if (player) {\n      player.score = score;\n      player.total = player.total + score;\n    }\n\n    // Add nullen\n    if (this.gameState.game.type === EGame.NULLENSPEL) {\n      if (player && player.total === 0) {\n        player.nullen = player.nullen + 1;\n      }\n    }\n\n    this.gameState = state;\n  }\n\n  onNextRound() {\n    let state = this.gameState;\n\n    // Add round to each player\n    state.players.forEach(player => player.currentRound = player.currentRound + 1);\n\n    // Calculate positions\n\n    let orderedPlayers = [...state.players];\n    switch(this.gameState.game.type) {\n      case EGame.UNO:\n        orderedPlayers = this.orderUno(state);\n        break;\n\n        case EGame.UNO:\n        orderedPlayers = this.orderUno(state);\n        break;\n    }\n\n\n    state.players.forEach(player => player.position = orderedPlayers.findIndex(p => p.name === player.name));\n\n    // Persist\n    this.gameState = state;\n    this.save('currentState', JSON.stringify(this.gameState));\n  }\n\n  orderUno(state: GameState): Player[] {\n    return [...state.players].sort((a, b) => {\n      if (a.total > b.total) return -1;\n      else if (a.total < b.total) return 1;\n      else return 0;\n    });\n  }\n\n  save(key: string, data: string) {\n    localStorage.setItem(key, data);\n  }\n\n}\n","<h1>{{gameState.game.name}}</h1>\n<table mat-table [dataSource]=\"gameState.players\">\n  <!-- Position Column -->\n  <ng-container matColumnDef=\"position\">\n    <th mat-header-cell *matHeaderCellDef> No. </th>\n    <td mat-cell *matCellDef=\"let player\"> {{player.position + 1}} </td>\n  </ng-container>\n\n  <!-- Name Column -->\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef> Name </th>\n    <td mat-cell *matCellDef=\"let player\"> {{player.name}} </td>\n  </ng-container>\n\n  <!-- Score Column -->\n  <ng-container matColumnDef=\"score\">\n    <th mat-header-cell *matHeaderCellDef> Score </th>\n    <td mat-cell *matCellDef=\"let player; let i = index\"> \n      <input matInput type=\"number\"\n      placeholder={{player.score}} (change)=\"saveScore($event, i)\">\n    </td>\n  </ng-container>\n\n  <!-- Nullen Column -->\n  <ng-container *ngIf=\"gameState.game.name == 'Nullenspel'\" matColumnDef=\"nullen\">\n    <th mat-header-cell *matHeaderCellDef> Nullen </th>\n    <td mat-cell *matCellDef=\"let player\"> {{player.nullen}}</td>\n  </ng-container>\n\n  <!-- total Column -->\n  <ng-container matColumnDef=\"total\">\n    <th mat-header-cell *matHeaderCellDef> Total </th>\n    <td mat-cell *matCellDef=\"let player\"> {{player.total}}</td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n\n<div class=\"next-round-button-container\">\n  <button mat-raised-button color=\"primary\" (click)=\"onNextRound()\">Next round</button>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}